{
  "hash": "c310c1af6acf2591554356cbe1b50460",
  "result": {
    "markdown": "---\ntitle: 練習問題\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\nそれでは練習問題を解いていきましょう。\n\n問題1 \n\nwhoデータを縦持ちデータにしてください。データの説明は、?whoで見ることができます。\n\n問題2 \n\ndata/to_wider.csvにあるデータは、whoの日本の部分のデータを縦にしたデータです。このデータを、元の形の横持ちにしてください。\n\n\n\n\n\n\n\n\n問題1 \n\nwhoデータを縦持ちデータにしてください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ndat <- who\n```\n:::\n\n\n\nさて、このデータですが、列名を確認すると、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"country\"      \"iso2\"         \"iso3\"         \"year\"         \"new_sp_m014\" \n [6] \"new_sp_m1524\" \"new_sp_m2534\" \"new_sp_m3544\" \"new_sp_m4554\" \"new_sp_m5564\"\n[11] \"new_sp_m65\"   \"new_sp_f014\"  \"new_sp_f1524\" \"new_sp_f2534\" \"new_sp_f3544\"\n[16] \"new_sp_f4554\" \"new_sp_f5564\" \"new_sp_f65\"   \"new_sn_m014\"  \"new_sn_m1524\"\n[21] \"new_sn_m2534\" \"new_sn_m3544\" \"new_sn_m4554\" \"new_sn_m5564\" \"new_sn_m65\"  \n[26] \"new_sn_f014\"  \"new_sn_f1524\" \"new_sn_f2534\" \"new_sn_f3544\" \"new_sn_f4554\"\n[31] \"new_sn_f5564\" \"new_sn_f65\"   \"new_ep_m014\"  \"new_ep_m1524\" \"new_ep_m2534\"\n[36] \"new_ep_m3544\" \"new_ep_m4554\" \"new_ep_m5564\" \"new_ep_m65\"   \"new_ep_f014\" \n[41] \"new_ep_f1524\" \"new_ep_f2534\" \"new_ep_f3544\" \"new_ep_f4554\" \"new_ep_f5564\"\n[46] \"new_ep_f65\"   \"newrel_m014\"  \"newrel_m1524\" \"newrel_m2534\" \"newrel_m3544\"\n[51] \"newrel_m4554\" \"newrel_m5564\" \"newrel_m65\"   \"newrel_f014\"  \"newrel_f1524\"\n[56] \"newrel_f2534\" \"newrel_f3544\" \"newrel_f4554\" \"newrel_f5564\" \"newrel_f65\"  \n```\n:::\n:::\n\n\n\nこんな感じです。\n少し厄介なのが、newの後に、sp, sn, ep, relとついていて、その後に性別と年齢がついているデータなのですが、newrelだけなぜかアンダースコアがついていないため、separateで簡単に分けるというわけにはいかなさそうです。\n\nとりあえず、pivot_longerを実行してみましょうここで、colsに指定するものはnewではじまる列です\n\nnames_toとvalues_toは\"name\"と\"value\"としておきましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntate <- dat %>% \n  pivot_longer(\n    cols = !c(country, iso2, iso3, year),\n    names_to = \"name\",\n    values_to = \"value\"\n  )\n```\n:::\n\n\n\nとりあえず、先ほどcolnames(dat)で確認しましたが、ここでnewで始まっていた列名をベクトルで取り出してunique関数で一意のものにして見てみましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntate$name %>% unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"new_sp_m014\"  \"new_sp_m1524\" \"new_sp_m2534\" \"new_sp_m3544\" \"new_sp_m4554\"\n [6] \"new_sp_m5564\" \"new_sp_m65\"   \"new_sp_f014\"  \"new_sp_f1524\" \"new_sp_f2534\"\n[11] \"new_sp_f3544\" \"new_sp_f4554\" \"new_sp_f5564\" \"new_sp_f65\"   \"new_sn_m014\" \n[16] \"new_sn_m1524\" \"new_sn_m2534\" \"new_sn_m3544\" \"new_sn_m4554\" \"new_sn_m5564\"\n[21] \"new_sn_m65\"   \"new_sn_f014\"  \"new_sn_f1524\" \"new_sn_f2534\" \"new_sn_f3544\"\n[26] \"new_sn_f4554\" \"new_sn_f5564\" \"new_sn_f65\"   \"new_ep_m014\"  \"new_ep_m1524\"\n[31] \"new_ep_m2534\" \"new_ep_m3544\" \"new_ep_m4554\" \"new_ep_m5564\" \"new_ep_m65\"  \n[36] \"new_ep_f014\"  \"new_ep_f1524\" \"new_ep_f2534\" \"new_ep_f3544\" \"new_ep_f4554\"\n[41] \"new_ep_f5564\" \"new_ep_f65\"   \"newrel_m014\"  \"newrel_m1524\" \"newrel_m2534\"\n[46] \"newrel_m3544\" \"newrel_m4554\" \"newrel_m5564\" \"newrel_m65\"   \"newrel_f014\" \n[51] \"newrel_f1524\" \"newrel_f2534\" \"newrel_f3544\" \"newrel_f4554\" \"newrel_f5564\"\n[56] \"newrel_f65\"  \n```\n:::\n:::\n\n\n\n先ほどと同様ですが、このデータをうまく分割する必要があります。\n\nnewrelのところを踏まえると、今回はextract関数を利用しましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntate2 <- tate %>% \n  extract(name, c(\"new\",\"type\",\"sex\",\"age\"), regex=\"(new_|new)(.+)_(m|f)(\\\\d+)\")\n\ntate2 %>% count(new)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  new        n\n  <chr>  <int>\n1 new   101360\n2 new_  304080\n```\n:::\n\n```{.r .cell-code}\ntate2 %>% count(type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  type       n\n  <chr>  <int>\n1 ep    101360\n2 rel   101360\n3 sn    101360\n4 sp    101360\n```\n:::\n\n```{.r .cell-code}\ntate2 %>% count(sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  sex        n\n  <chr>  <int>\n1 f     202720\n2 m     202720\n```\n:::\n\n```{.r .cell-code}\ntate2 %>% count(age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 2\n  age       n\n  <chr> <int>\n1 014   57920\n2 1524  57920\n3 2534  57920\n4 3544  57920\n5 4554  57920\n6 5564  57920\n7 65    57920\n```\n:::\n:::\n\n\n\nそれぞれ、extractで分割した列の内訳をみると、問題なく取得できているようです。\n\nただ、new列は必要ありませんので、最後に消しておきましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntate3 <- tate2 %>% \n  select(!new)\n\ntate3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 405,440 × 8\n   country     iso2  iso3   year type  sex   age   value\n   <chr>       <chr> <chr> <dbl> <chr> <chr> <chr> <dbl>\n 1 Afghanistan AF    AFG    1980 sp    m     014      NA\n 2 Afghanistan AF    AFG    1980 sp    m     1524     NA\n 3 Afghanistan AF    AFG    1980 sp    m     2534     NA\n 4 Afghanistan AF    AFG    1980 sp    m     3544     NA\n 5 Afghanistan AF    AFG    1980 sp    m     4554     NA\n 6 Afghanistan AF    AFG    1980 sp    m     5564     NA\n 7 Afghanistan AF    AFG    1980 sp    m     65       NA\n 8 Afghanistan AF    AFG    1980 sp    f     014      NA\n 9 Afghanistan AF    AFG    1980 sp    f     1524     NA\n10 Afghanistan AF    AFG    1980 sp    f     2534     NA\n# ℹ 405,430 more rows\n```\n:::\n:::\n\n\n\nここまでをまとめて書いてあげると\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  pivot_longer(\n    cols = !c(country, iso2, iso3, year),\n    names_to = \"name\",\n    values_to = \"value\"\n  ) %>%\n  extract(name, c(\"new\",\"type\",\"sex\",\"age\"), regex=\"(new_|new)(.+)_(m|f)(\\\\d+)\") %>% \n  select(!new)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 405,440 × 8\n   country     iso2  iso3   year type  sex   age   value\n   <chr>       <chr> <chr> <dbl> <chr> <chr> <chr> <dbl>\n 1 Afghanistan AF    AFG    1980 sp    m     014      NA\n 2 Afghanistan AF    AFG    1980 sp    m     1524     NA\n 3 Afghanistan AF    AFG    1980 sp    m     2534     NA\n 4 Afghanistan AF    AFG    1980 sp    m     3544     NA\n 5 Afghanistan AF    AFG    1980 sp    m     4554     NA\n 6 Afghanistan AF    AFG    1980 sp    m     5564     NA\n 7 Afghanistan AF    AFG    1980 sp    m     65       NA\n 8 Afghanistan AF    AFG    1980 sp    f     014      NA\n 9 Afghanistan AF    AFG    1980 sp    f     1524     NA\n10 Afghanistan AF    AFG    1980 sp    f     2534     NA\n# ℹ 405,430 more rows\n```\n:::\n:::\n\n\n\nこれ、extract部分はpivot_longerの中に入れることが可能なので、この変換、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_res <- dat %>% \n  pivot_longer(\n    cols = !c(country, iso2, iso3, year),\n    names_to = c(\"new\",\"type\",\"sex\",\"age\"),\n    values_to = \"value\",\n    names_pattern = \"(new_|new)(.+)_(m|f)(\\\\d+)\"\n  ) %>% \n  select(!new)\n```\n:::\n\n\n\nという風に書いてあげることも可能です！\n\n以上、回答でした。\n\nおまけに、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngdat <- long_res %>% \n  filter(iso3 == \"JPN\") %>% \n  filter(sex == \"m\") %>% \n  filter(type == \"sp\") %>% \n  filter(!is.na(value))\n\nggplot(gdat) +\n  geom_point(aes(x = year, y = value, color = age)) +\n  geom_line(aes(x = year, y = value, color = age, group=age))\n```\n\n::: {.cell-output-display}\n![](s05-066_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n日本の男性のspを年代別にプロットするとこんな感じです。geomを二つ重ねる書き方は解説しておりませんが、ggplotの中級レベルのコースでまた解説いたします。\n\n問題2 \n\ndata/to_wider.csvのデータを横持ちにしてください。\n\nこの、to_wider.csvのデータ、一つ前の問題の最後のgdatの内容を保存したものです。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- read_csv(\"data/to_wider.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 126 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): country, iso2, iso3, type, sex, age\ndbl (2): year, value\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 126 × 8\n   country iso2  iso3   year type  sex   age   value\n   <chr>   <chr> <chr> <dbl> <chr> <chr> <chr> <dbl>\n 1 Japan   JP    JPN    1995 sp    m     014      15\n 2 Japan   JP    JPN    1995 sp    m     1524    342\n 3 Japan   JP    JPN    1995 sp    m     2534    627\n 4 Japan   JP    JPN    1995 sp    m     3544    995\n 5 Japan   JP    JPN    1995 sp    m     4554   1847\n 6 Japan   JP    JPN    1995 sp    m     5564   2059\n 7 Japan   JP    JPN    1995 sp    m     65     4089\n 8 Japan   JP    JPN    1996 sp    m     014      16\n 9 Japan   JP    JPN    1996 sp    m     1524    309\n10 Japan   JP    JPN    1996 sp    m     2534    621\n# ℹ 116 more rows\n```\n:::\n:::\n\n\n\n元にもどしていきましょう。\n\nとは言っても基本的な使い方を行うだけなので、それほど難しくありません。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  pivot_wider(id_cols = c(country, iso2, iso3, year),\n              names_from = c(type, sex, age),\n              values_from = value,\n              names_sep = \"_\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 18 × 11\n   country iso2  iso3   year sp_m_014 sp_m_1524 sp_m_2534 sp_m_3544 sp_m_4554\n   <chr>   <chr> <chr> <dbl>    <dbl>     <dbl>     <dbl>     <dbl>     <dbl>\n 1 Japan   JP    JPN    1995       15       342       627       995      1847\n 2 Japan   JP    JPN    1996       16       309       621       843      1756\n 3 Japan   JP    JPN    1997        8       304       625       798      1793\n 4 Japan   JP    JPN    1998        2       306       597       724      1571\n 5 Japan   JP    JPN    1999        6       290       623       706      1605\n 6 Japan   JP    JPN    2000        2       246       572       676      1494\n 7 Japan   JP    JPN    2001        3       220       576       632      1319\n 8 Japan   JP    JPN    2002        2       191       549       579      1192\n 9 Japan   JP    JPN    2003        1       210       521       550      1063\n10 Japan   JP    JPN    2004        2       193       462       599       934\n11 Japan   JP    JPN    2005        9       197       488       605       868\n12 Japan   JP    JPN    2006        3       175       436       529       743\n13 Japan   JP    JPN    2007        1       142       372       512       668\n14 Japan   JP    JPN    2008        2       117       339       456       599\n15 Japan   JP    JPN    2009        1       134       328       410       580\n16 Japan   JP    JPN    2010        1       128       252       382       469\n17 Japan   JP    JPN    2011        0        96       215       367       465\n18 Japan   JP    JPN    2012        2        94       209       309       415\n# ℹ 2 more variables: sp_m_5564 <dbl>, sp_m_65 <dbl>\n```\n:::\n:::\n\n\n\nいかがでしょうか？\n\nお疲れさまでした、このセクション、後もう一つ、データをくっつけるという概念の解説をおこなったら最終問題を行ってすべて終了となります。\n\n",
    "supporting": [
      "s05-066_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}