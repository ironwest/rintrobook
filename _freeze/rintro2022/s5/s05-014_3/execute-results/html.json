{
  "hash": "0bccb9fdbb703aba46cee59fd1e9ecfb",
  "result": {
    "markdown": "---\ntitle: rename()の練習問題\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\nでは、練習してみましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n{\n  temp <- tibble(`日本語1`=1:3,`日本語2`=1:3,`日本語3`=1:3)\n  write_csv(temp,\"data/rename.csv\")\n}\n```\n:::\n\n\n課題1:\n\n\"data/rename.csv\"を読み込んでください。\n\nヒント:文字化けした場合はlocaleで設定を変えましょう。windowsの標準文字コードはcp932です。\n\n課題2:\n\nその中の「日本語の変数名」3つをrename関数で、好きな名前に変えてみてください。\n\nできましたか?\n\n\n課題1:ここではあえて文字コードをwindows基準にかえてありました。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_csv(\"data/rename.csv\") #そのままだとだめです。\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (3): 日本語1, 日本語2, 日本語3\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  日本語1 日本語2 日本語3\n    <dbl>   <dbl>   <dbl>\n1       1       1       1\n2       2       2       2\n3       3       3       3\n```\n:::\n\n```{.r .cell-code}\ndat <- read_csv(\n  file = \"data/rename.csv\",\n  locale = locale(encoding = \"cp932\")\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: Invalid multibyte sequence\n```\n:::\n\n```{.r .cell-code}\ndat\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'dat' not found\n```\n:::\n:::\n\n\n\nあとは、好きな名前に変更です。\n\n課題2:\n\nその中の「日本語の変数名」3つをrename関数で、好きな名前に変えてみてください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  rename(\n    japanese1 = `日本語1`,\n    japanese2 = `日本語2`,\n    japanese3 = `日本語3`\n  )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'dat' not found\n```\n:::\n:::\n\n\n\n以上、それほど難しくありませんね?次は、列を選択する関数の説明です。\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}