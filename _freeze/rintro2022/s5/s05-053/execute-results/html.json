{
  "hash": "a2f04f6fae42c9ad4b2bfdb3093fef6b",
  "result": {
    "markdown": "---\ntitle: 練習問題\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\nここではdata/stringr.xlsxファイルを利用します\n\n練習問題1 \n\nインポートしてください\n\n練習問題2-1 \n\ntarget3をname、hr、mlの3つの列にseparateを使ってわけてください。\n\n練習問題2-1 \n\ntarget3をname、hr、mlの3つの列にextractを使ってわけてください。\n\n練習問題3-1 \n\ntarget2をname,value,unitの3つの列にseparateを使って分けてください。\n\n練習問題3-2 \n\ntarget2をname,value,unitの3つの列にextractを使って分けてください。\n\n練習問題4-1 \n\ntarget1をname,ml,unitの3つの列にseparateを使って分けてください。\n\n練習問題4-2 \n\ntarget1をname,ml,unitの3つの列にextractを使って分けてください。\n\n解答です。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n```\n:::\n\n\n\n練習問題1 \n\nインポートしてください\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- read_excel(\"data/stringr.xlsx\")\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  target1            target2        target3           \n  <chr>              <chr>          <chr>             \n1 abc:500ml 1unit    AST 50IU,      ope:A 4.5hr 8Oml  \n2 def 250ml 4units   HbA1c 5.0%     ope:B 3hr 10ml    \n3 ghi  100ml 5units  BMI 23.1kg/m^2 ope:C 12.5hr 1OOml\n4 jkl  100ml 6units  AST: 60IU      ope:D 4.5hr 180ml \n5 jkl  100ml 9units  HbA1c 5.0%     ope:E 3hr 120ml   \n6 abc  100ml 20units BMI 18.1kg/m^2 ope:F 12.5hr 1OOml\n```\n:::\n:::\n\n\n\n練習問題2-1 \n\ntarget3をname、hr、mlの3つの列にseparateを使ってわけてください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  select(target3) %>% \n  separate(col = target3,\n           into = c(\"ope\",\"name\",\"hr\",\"ml\"), \n           sep=\":|\\\\s+\", remove=FALSE) %>% \n  select(-ope)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  target3            name  hr     ml   \n  <chr>              <chr> <chr>  <chr>\n1 ope:A 4.5hr 8Oml   A     4.5hr  8Oml \n2 ope:B 3hr 10ml     B     3hr    10ml \n3 ope:C 12.5hr 1OOml C     12.5hr 1OOml\n4 ope:D 4.5hr 180ml  D     4.5hr  180ml\n5 ope:E 3hr 120ml    E     3hr    120ml\n6 ope:F 12.5hr 1OOml F     12.5hr 1OOml\n```\n:::\n:::\n\n\n\nこの方法だと、hrやml等、余計な文字列がくっついているので、str_removeなどで除去してあげる必要がありますね。\n\n練習問題2-1 \n\ntarget3をname、hr、mlの3つの列にextractを使ってわけてください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  select(target3) %>% \n  extract(target3, c(\"name\",\"hr\",\"ml\"),\n          regex=\"ope:(.+) (.+)hr (.+)ml\",\n          remove = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  target3            name  hr    ml   \n  <chr>              <chr> <chr> <chr>\n1 ope:A 4.5hr 8Oml   A     4.5   8O   \n2 ope:B 3hr 10ml     B     3     10   \n3 ope:C 12.5hr 1OOml C     12.5  1OO  \n4 ope:D 4.5hr 180ml  D     4.5   180  \n5 ope:E 3hr 120ml    E     3     120  \n6 ope:F 12.5hr 1OOml F     12.5  1OO  \n```\n:::\n:::\n\n\n\nいかがでしょうか?extractを利用するとseparateよりも正規表現を記載する手間はありますが、より細かく分けることができます。\n\n練習問題3-1 \n\ntarget2をname,value,unitの3つの列にseparateを使って分けてください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  select(target2) %>% \n  separate(target2,c(\"name\",\"value\",\"unit\"),\n           sep = \":\\\\s+|:|\\\\s+\") %>% \n  mutate(\n    unit = str_remove(value,\"\\\\d+\\\\.\\\\d+|\\\\d+\"),\n    value = str_extract(value,\"\\\\d+\\\\.\\\\d+|\\\\d+\")\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 3 pieces. Missing pieces filled with `NA` in 6 rows [1, 2, 3, 4, 5,\n6].\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  name  value unit  \n  <chr> <chr> <chr> \n1 AST   50    IU,   \n2 HbA1c 5.0   %     \n3 BMI   23.1  kg/m^2\n4 AST   60    IU    \n5 HbA1c 5.0   %     \n6 BMI   18.1  kg/m^2\n```\n:::\n:::\n\n\n\n練習問題3-2 \n\ntarget2をname,value,unitの3つの列にextractを使って分けてください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  select(target2) %>% \n  extract(target2,c(\"name\",\"value\",\"unit\"),\n          regex = \"(.+)[:\\\\s]+(\\\\d+\\\\.\\\\d+|\\\\d+)(.+)$\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  name  value unit  \n  <chr> <chr> <chr> \n1 AST   50    IU,   \n2 HbA1c 5.0   %     \n3 BMI   23.1  kg/m^2\n4 AST:  60    IU    \n5 HbA1c 5.0   %     \n6 BMI   18.1  kg/m^2\n```\n:::\n:::\n\n\n\nいかがでしょうか?\n\nextractの方がより複雑な形に一度で対応できますね?\n\n練習問題4-1 \n\ntarget1をname,ml,unitの3つの列にseparateを使って分けてください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  select(target1) %>% \n  separate(target1,c(\"name\",\"ml\",\"unit\"),\n           sep=\":|\\\\s+\") %>% \n  mutate(\n    ml = str_remove(ml,\"ml\"),\n    unit = str_remove(unit,\"unit(s|)\")\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  name  ml    unit \n  <chr> <chr> <chr>\n1 abc   500   1    \n2 def   250   4    \n3 ghi   100   5    \n4 jkl   100   6    \n5 jkl   100   9    \n6 abc   100   20   \n```\n:::\n:::\n\n\n\n練習問題4-2 \n\ntarget1をname,ml,unitの3つの列にextractを使って分けてください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  select(target1) %>% \n  extract(target1,c(\"name\",\"ml\",\"unit\"),\n          regex=\"(.+)[:\\\\s]+(\\\\d+)ml (\\\\d+)unit\") %>% \n  mutate(name = str_trim(name))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  name  ml    unit \n  <chr> <chr> <chr>\n1 abc   500   1    \n2 def   250   4    \n3 ghi   100   5    \n4 jkl   100   6    \n5 jkl   100   9    \n6 abc   100   20   \n```\n:::\n:::\n\n\n\n以上、いかがでしょうか?\n\n正規表現を考えて抜き出す場合よりもseparateやextractを利用する方が簡単な場合もあるので、どの関数を利用するか、お手元のデータの形をみて、考えてみてください。\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}