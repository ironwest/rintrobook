{
  "hash": "6d6dc7887bfc1326ee4af38b299b778a",
  "result": {
    "markdown": "---\ntitle: パイプ関数(演習)\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\n\n練習:パイプ関数をキーボードショートカットを利用して10回入力してください。\n\nwindows:ctrl + shift + m\nmac:    cmd  + shift + m\n\nこのショートカット、無意識で入力できるようになるくらい、習熟しておいてください。\n\n質問:次の処理をパイプ関数を利用してかいてみてください　。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.2     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.2     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n\n1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n```\n:::\n:::\n\n\n\n2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(iris$Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    setosa versicolor  virginica \n        50         50         50 \n```\n:::\n:::\n\n\n\n3\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas.character(sum(c(1,2,3,4,5)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"15\"\n```\n:::\n:::\n\n\n\nできましたか？\n\n1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n```\n:::\n\n```{.r .cell-code}\niris %>% summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n```\n:::\n:::\n\n\n\n2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(iris$Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    setosa versicolor  virginica \n        50         50         50 \n```\n:::\n\n```{.r .cell-code}\niris$Species %>% summary() #これとか、\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    setosa versicolor  virginica \n        50         50         50 \n```\n:::\n\n```{.r .cell-code}\niris %>% .$Species %>% summary()　\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    setosa versicolor  virginica \n        50         50         50 \n```\n:::\n\n```{.r .cell-code}\n　　#こんな風にも書けます\n　　#\niris %>% {.$Species} %>% summary() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    setosa versicolor  virginica \n        50         50         50 \n```\n:::\n\n```{.r .cell-code}\n    #{}でくくると見やすくてよいかもしれません。\n```\n:::\n\n\n\n3\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas.character(sum(c(1,2,3,4,5)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"15\"\n```\n:::\n\n```{.r .cell-code}\nc(1,2,3,4,5) %>% \n  sum(.) %>% \n  as.character(.)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"15\"\n```\n:::\n\n```{.r .cell-code}\n　　#基本の書き方はこうです。\n```\n:::\n\n\n\nただし、実はアーギュメントが1個だけの場合、(.)を省いても動くので、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(1,2,3,4,5) %>% sum %>% as.character\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"15\"\n```\n:::\n:::\n\n\n\nでもOKです。ついでに、c(1,2,3,4,5)は1:5と書いてもOKなので、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(1,2,3,4,5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3 4 5\n```\n:::\n\n```{.r .cell-code}\n1:5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3 4 5\n```\n:::\n\n```{.r .cell-code}\n1:5 %>% sum %>% as.character\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"15\"\n```\n:::\n:::\n\n\n\nとものすごく短くもできます。\n\n",
    "supporting": [
      "s05-009_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}