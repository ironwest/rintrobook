{
  "hash": "9a84513f71bbb2d00363df694ea65352",
  "result": {
    "markdown": "---\ntitle: 実践 separate()\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n\nそれでは、separate関数の動きを見ていきましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?separate\n```\n:::\n\n\n\nヘルプをみると、col、into、sepだけでなく他にも色々なargumentがあります。簡単に動きを見ていきましょう\n\nまずは、slideで解説したものからいきます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- tibble(tgt = c(\"glu:102 mg/dl\",\"AST:41 IU/L\",\n                      \"ALT:32 IU/L\",\"GGT:33 IU/L\"))\n\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 1\n  tgt          \n  <chr>        \n1 glu:102 mg/dl\n2 AST:41 IU/L  \n3 ALT:32 IU/L  \n4 GGT:33 IU/L  \n```\n:::\n:::\n\n\n\n正規表現であれば\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  mutate(\n    name  = str_extract(tgt,\"^.+(?=:)\"),\n    value = str_extract(tgt,\"(?<=:)\\\\d+\"),\n    unit  = str_extract(tgt,\"(?<=\\\\s).+$\"),\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  tgt           name  value unit \n  <chr>         <chr> <chr> <chr>\n1 glu:102 mg/dl glu   102   mg/dl\n2 AST:41 IU/L   AST   41    IU/L \n3 ALT:32 IU/L   ALT   32    IU/L \n4 GGT:33 IU/L   GGT   33    IU/L \n```\n:::\n:::\n\n\n\nこんな感じで抜き出せましたね?\n\nseparateで書くと、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  name  value unit \n  <chr> <chr> <chr>\n1 glu   102   mg/dl\n2 AST   41    IU/L \n3 ALT   32    IU/L \n4 GGT   33    IU/L \n```\n:::\n:::\n\n\n\nこんな感じです。\n\nstr_extractと比べてだいぶ楽ではありませんか?\n\nargumentの設定も見ていきましょう。\n\nremove=FALSEに変更することで、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  name  value unit \n  <chr> <chr> <chr>\n1 glu   102   mg/dl\n2 AST   41    IU/L \n3 ALT   32    IU/L \n4 GGT   33    IU/L \n```\n:::\n\n```{.r .cell-code}\ndat %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\",\n           remove=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  tgt           name  value unit \n  <chr>         <chr> <chr> <chr>\n1 glu:102 mg/dl glu   102   mg/dl\n2 AST:41 IU/L   AST   41    IU/L \n3 ALT:32 IU/L   ALT   32    IU/L \n4 GGT:33 IU/L   GGT   33    IU/L \n```\n:::\n:::\n\n\n\n元の列を残したまま処理することが可能です。\n\nconvert=TRUEとすると、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  name  value unit \n  <chr> <chr> <chr>\n1 glu   102   mg/dl\n2 AST   41    IU/L \n3 ALT   32    IU/L \n4 GGT   33    IU/L \n```\n:::\n\n```{.r .cell-code}\ndat %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\",\n           remove=FALSE, convert=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  tgt           name  value unit \n  <chr>         <chr> <int> <chr>\n1 glu:102 mg/dl glu     102 mg/dl\n2 AST:41 IU/L   AST      41 IU/L \n3 ALT:32 IU/L   ALT      32 IU/L \n4 GGT:33 IU/L   GGT      33 IU/L \n```\n:::\n:::\n\n\n\n分けた後の型変換(数値型等)も自動的にしてくれます。\n\nextraは要素が多い時の動作を指定します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- tibble(\n  tgt = c(\"glu:102 mg/dl 注意:食後\",\n          \"AST:41 IU/L\",\n          \"ALT:32 IU/L\",\n          \"GGT:33 IU/L\")\n)\n\ndat2 %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\",\n           remove=FALSE, convert=TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 3 pieces. Additional pieces discarded in 1 rows [1].\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  tgt                     name  value unit \n  <chr>                   <chr> <int> <chr>\n1 glu:102 mg/dl 注意:食後 glu     102 mg/dl\n2 AST:41 IU/L             AST      41 IU/L \n3 ALT:32 IU/L             ALT      32 IU/L \n4 GGT:33 IU/L             GGT      33 IU/L \n```\n:::\n:::\n\n\n\n1行目の要素が多すぎるデータをseparateしてみると、このように、警告（warning)してくれます。この動作、extraのargumentでコントロールできて、デフォルトは、warnです。\n\nwarnだと警告とともに、余分な要素は無視されます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\",\n           remove=FALSE, convert=TRUE, extra=\"warn\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 3 pieces. Additional pieces discarded in 1 rows [1].\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  tgt                     name  value unit \n  <chr>                   <chr> <int> <chr>\n1 glu:102 mg/dl 注意:食後 glu     102 mg/dl\n2 AST:41 IU/L             AST      41 IU/L \n3 ALT:32 IU/L             ALT      32 IU/L \n4 GGT:33 IU/L             GGT      33 IU/L \n```\n:::\n:::\n\n\n\ndropにしておくと、警告はなくて、余分な要素が無視されます\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\",\n           remove=FALSE, convert=TRUE, extra=\"drop\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  tgt                     name  value unit \n  <chr>                   <chr> <int> <chr>\n1 glu:102 mg/dl 注意:食後 glu     102 mg/dl\n2 AST:41 IU/L             AST      41 IU/L \n3 ALT:32 IU/L             ALT      32 IU/L \n4 GGT:33 IU/L             GGT      33 IU/L \n```\n:::\n:::\n\n\n\nfillは、intoで指定した列に「分割することをやめて」収めてくれます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\",\n           remove=FALSE, convert=TRUE, extra=\"merge\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  tgt                     name  value unit           \n  <chr>                   <chr> <int> <chr>          \n1 glu:102 mg/dl 注意:食後 glu     102 mg/dl 注意:食後\n2 AST:41 IU/L             AST      41 IU/L           \n3 ALT:32 IU/L             ALT      32 IU/L           \n4 GGT:33 IU/L             GGT      33 IU/L           \n```\n:::\n:::\n\n\n\nfillは要素が少ない場合の動作を指定します\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3 <- tibble(\n  tgt = c(\"glu:-\",\n          \"AST:41 IU/L\",\n          \"ALT:32 IU/L\",\n          \"GGT:未\")\n)\n```\n:::\n\n\n\nfillに与えられるのは、warn right leftの3種類でデフォルトはwarnです。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3 %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\",\n           remove=FALSE, convert=TRUE, fill=\"warn\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 3 pieces. Missing pieces filled with `NA` in 2 rows [1, 4].\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  tgt         name  value unit \n  <chr>       <chr> <chr> <chr>\n1 glu:-       glu   -     <NA> \n2 AST:41 IU/L AST   41    IU/L \n3 ALT:32 IU/L ALT   32    IU/L \n4 GGT:未      GGT   未    <NA> \n```\n:::\n\n```{.r .cell-code}\ndat3 %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\",\n           remove=FALSE, convert=TRUE, fill=\"right\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  tgt         name  value unit \n  <chr>       <chr> <chr> <chr>\n1 glu:-       glu   -     <NA> \n2 AST:41 IU/L AST   41    IU/L \n3 ALT:32 IU/L ALT   32    IU/L \n4 GGT:未      GGT   未    <NA> \n```\n:::\n\n```{.r .cell-code}\ndat3 %>% \n  separate(tgt, into=c(\"name\",\"value\",\"unit\"),sep=\":|\\\\s\",\n           remove=FALSE, convert=TRUE, fill=\"left\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  tgt         name  value unit \n  <chr>       <chr> <chr> <chr>\n1 glu:-       <NA>  glu   -    \n2 AST:41 IU/L AST   41    IU/L \n3 ALT:32 IU/L ALT   32    IU/L \n4 GGT:未      <NA>  GGT   未   \n```\n:::\n:::\n\n\n\nここの設定、要素が不足しているときに右に詰めるか左に詰めるかを指定するだけです。\n\nsepですが、正規表現(文字列)だけでなく、数字で区切る位置を指定することも可能です。\n\n例えば、検査名検査結果1回目2回目3回目を、\nken000100020003\n\nの様に記載されたデータがあった場合に、正規表現で区切り位置を示すのは難しいので、\nken000100020003\n123456789012345678\n  |   |   |   \n  3   7   11\n\n3,7,11文字目で区切ることにしましょう(検査名は必ずアルファベット3文字で表されるように、データの種類、文字列の位置で固定されているデータとします。)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat4 <- tibble(\n  tgt = c(\"glu010000890095\",\n          \"ast003000400050\",\n          \"alt002000300040\")\n)\n\ndat4 %>% \n  separate(col=tgt,into=c(\"name\",\"v1\",\"v2\",\"v3\"),sep=c(3,7,11))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 4\n  name  v1    v2    v3   \n  <chr> <chr> <chr> <chr>\n1 glu   0100  0089  0095 \n2 ast   0030  0040  0050 \n3 alt   0020  0030  0040 \n```\n:::\n:::\n\n\n\nいかがでしょうか?\n文字列の位置でも簡単に切り分けることができました。\n\nこのseparate関数、かなり便利な関数ですので是非使い方をマスターしておいてください。\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}