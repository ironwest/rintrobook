{
  "hash": "708f1cba7c6d0fda766cb5e6b9d99ad1",
  "result": {
    "markdown": "---\ntitle: 練習問題の解答\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\nできましたか?\n\nこれまでの知識も利用しながら実施する問題なので少し難しかったかもしれません。\n\nQ0: data/stringr.xlsxファイルのSheet1にあるデータをよみこみましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\ndat <- read_excel(\"data/stringr.xlsx\")\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  target1            target2        target3           \n  <chr>              <chr>          <chr>             \n1 abc:500ml 1unit    AST 50IU,      ope:A 4.5hr 8Oml  \n2 def 250ml 4units   HbA1c 5.0%     ope:B 3hr 10ml    \n3 ghi  100ml 5units  BMI 23.1kg/m^2 ope:C 12.5hr 1OOml\n4 jkl  100ml 6units  AST: 60IU      ope:D 4.5hr 180ml \n5 jkl  100ml 9units  HbA1c 5.0%     ope:E 3hr 120ml   \n6 abc  100ml 20units BMI 18.1kg/m^2 ope:F 12.5hr 1OOml\n```\n:::\n:::\n\n\nこれは、特に問題ありませんね。これまで通りです。\n\n\nQ1-1 target1列のみに列を絞って、\"xxx100ml 1unit\"の、unitの前の数字をぬきだして新しい列、unitを作成してください\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1 <- dat %>% \n  select(target1) %>% \n  mutate(unit = str_extract(target1, \"\\\\d+(?=unit)\"))\n\ndat1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  target1            unit \n  <chr>              <chr>\n1 abc:500ml 1unit    1    \n2 def 250ml 4units   4    \n3 ghi  100ml 5units  5    \n4 jkl  100ml 6units  6    \n5 jkl  100ml 9units  9    \n6 abc  100ml 20units 20   \n```\n:::\n:::\n\n\n\nこれも、基本的なextract関数の使い方で、正規表現そのものもそれほど複雑ではないですね？\n\nQ1-2 Q1-1で作成した表で、target1列の\"xxx100ml 1unit\"の、ml前の数字をぬきだして、mlではなくてL単位に変換(100mlなら0.1L)してlitterという新しい列を追加してください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1 <- dat1 %>% \n  mutate(ml = str_extract(target1,\"\\\\d+(?=ml)\"))\n\ndat1 <- dat1 %>% \n  mutate(litter = as.numeric(ml)/1000)\n\ndat1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  target1            unit  ml    litter\n  <chr>              <chr> <chr>  <dbl>\n1 abc:500ml 1unit    1     500     0.5 \n2 def 250ml 4units   4     250     0.25\n3 ghi  100ml 5units  5     100     0.1 \n4 jkl  100ml 6units  6     100     0.1 \n5 jkl  100ml 9units  9     100     0.1 \n6 abc  100ml 20units 20    100     0.1 \n```\n:::\n:::\n\n\n\nすこし込み入ってきました。as.numericで文字列を数字型に変換してあげれば計算することができます。\n\nQ1-3 Q1-2で作成した表で、target1の\"xxx100ml 2unit\"の、xxx部分を抜き出して、nameという名前の新しい列を作成してください。尚前後に余分なスペースがあればname列から削除してください。\n\n最初の正規表現的な難問です。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1 <- dat1 %>% \n  mutate(name = str_extract(target1,\"^.+(?=(:| ))\"))\n\ndat1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  target1            unit  ml    litter name      \n  <chr>              <chr> <chr>  <dbl> <chr>     \n1 abc:500ml 1unit    1     500     0.5  abc:500ml \n2 def 250ml 4units   4     250     0.25 def 250ml \n3 ghi  100ml 5units  5     100     0.1  ghi  100ml\n4 jkl  100ml 6units  6     100     0.1  jkl  100ml\n5 jkl  100ml 9units  9     100     0.1  jkl  100ml\n6 abc  100ml 20units 20    100     0.1  abc  100ml\n```\n:::\n:::\n\n\n\nこのように、Look Aroundでスペースかコロンを指定しても、後ろのスペースのところまでを.+が拾ってしまいます。\n\nこういう場合は、正規表現のところで解説した.+?という+のマッチする範囲を最小に絞るという表記を利用しましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1 <- dat1 %>% \n  mutate(name = str_extract(target1,\"^.+?(?=(:| ))\"))\n\ndat1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  target1            unit  ml    litter name \n  <chr>              <chr> <chr>  <dbl> <chr>\n1 abc:500ml 1unit    1     500     0.5  abc  \n2 def 250ml 4units   4     250     0.25 def  \n3 ghi  100ml 5units  5     100     0.1  ghi  \n4 jkl  100ml 6units  6     100     0.1  jkl  \n5 jkl  100ml 9units  9     100     0.1  jkl  \n6 abc  100ml 20units 20    100     0.1  abc  \n```\n:::\n:::\n\n\n\nできました!\n\nQ1-4 Q1-3で作成した表で、target1列を削除して、name, litter, unitの順に列の順番を並べてください\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  target1            unit  ml    litter name \n  <chr>              <chr> <chr>  <dbl> <chr>\n1 abc:500ml 1unit    1     500     0.5  abc  \n2 def 250ml 4units   4     250     0.25 def  \n3 ghi  100ml 5units  5     100     0.1  ghi  \n4 jkl  100ml 6units  6     100     0.1  jkl  \n5 jkl  100ml 9units  9     100     0.1  jkl  \n6 abc  100ml 20units 20    100     0.1  abc  \n```\n:::\n\n```{.r .cell-code}\ncolnames(dat1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"target1\" \"unit\"    \"ml\"      \"litter\"  \"name\"   \n```\n:::\n:::\n\n\n\nから、必要なものだけを選べばよいので、問題文通りにするのであれば、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1 %>% \n  select(!c(target1, ml)) %>% \n  select(name, litter, unit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  name  litter unit \n  <chr>  <dbl> <chr>\n1 abc     0.5  1    \n2 def     0.25 4    \n3 ghi     0.1  5    \n4 jkl     0.1  6    \n5 jkl     0.1  9    \n6 abc     0.1  20   \n```\n:::\n:::\n\n\n\nですが、selectはそもそもそれ以外削除するので、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1 %>% select(name,litter,unit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  name  litter unit \n  <chr>  <dbl> <chr>\n1 abc     0.5  1    \n2 def     0.25 4    \n3 ghi     0.1  5    \n4 jkl     0.1  6    \n5 jkl     0.1  9    \n6 abc     0.1  20   \n```\n:::\n:::\n\n\n\nでOKです。\n\nQ2-1 target2列のみに絞って、検査結果のみを抜き出して新しいValue列を作成してください\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- dat %>% select(target2)\ndat2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 1\n  target2       \n  <chr>         \n1 AST 50IU,     \n2 HbA1c 5.0%    \n3 BMI 23.1kg/m^2\n4 AST: 60IU     \n5 HbA1c 5.0%    \n6 BMI 18.1kg/m^2\n```\n:::\n\n```{.r .cell-code}\ndat2 <- dat2 %>% \n  mutate(value = str_extract(target2,\"(?<=\\\\s)(\\\\d+\\\\.\\\\d+|\\\\d+)\"))\n```\n:::\n\n\n\nQ2-2 Q2-1で作成した表に、target2列の単位を抜き出して新しい列、unitを作成してください。\n\n正規表現で直接抜き出すのは難しいのでstr_replaceを使いましょう\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- dat2 %>% \n  mutate(num_unit = str_extract(target2, \"(?<=\\\\s).+$\")) %>% \n  mutate(unit = str_replace(num_unit,\"\\\\d+\\\\.\\\\d+|\\\\d+\",\"\"))\ndat2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  target2        value num_unit   unit  \n  <chr>          <chr> <chr>      <chr> \n1 AST 50IU,      50    50IU,      IU,   \n2 HbA1c 5.0%     5.0   5.0%       %     \n3 BMI 23.1kg/m^2 23.1  23.1kg/m^2 kg/m^2\n4 AST: 60IU      60    60IU       IU    \n5 HbA1c 5.0%     5.0   5.0%       %     \n6 BMI 18.1kg/m^2 18.1  18.1kg/m^2 kg/m^2\n```\n:::\n:::\n\n\n\nなぜか1行目のIUの最後にカンマがありますね(これは本気で私が消し忘れていたカンマです。ついでにこれをけしておきましょう。)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- dat2 %>% \n  mutate(unit = str_replace(unit,\",$\",\"\"))\ndat2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  target2        value num_unit   unit  \n  <chr>          <chr> <chr>      <chr> \n1 AST 50IU,      50    50IU,      IU    \n2 HbA1c 5.0%     5.0   5.0%       %     \n3 BMI 23.1kg/m^2 23.1  23.1kg/m^2 kg/m^2\n4 AST: 60IU      60    60IU       IU    \n5 HbA1c 5.0%     5.0   5.0%       %     \n6 BMI 18.1kg/m^2 18.1  18.1kg/m^2 kg/m^2\n```\n:::\n:::\n\n\nQ2-3 Q2-2で作成した表に、target2列の検査名を抜き出して、新しい列、nameを作成してください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- dat2 %>% \n  mutate(name = str_extract(target2,\".+?(?=(:|\\\\s))\"))\ndat2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  target2        value num_unit   unit   name \n  <chr>          <chr> <chr>      <chr>  <chr>\n1 AST 50IU,      50    50IU,      IU     AST  \n2 HbA1c 5.0%     5.0   5.0%       %      HbA1c\n3 BMI 23.1kg/m^2 23.1  23.1kg/m^2 kg/m^2 BMI  \n4 AST: 60IU      60    60IU       IU     AST  \n5 HbA1c 5.0%     5.0   5.0%       %      HbA1c\n6 BMI 18.1kg/m^2 18.1  18.1kg/m^2 kg/m^2 BMI  \n```\n:::\n:::\n\n\n\nこれも.+?とつけないと、:を省いて抜き出すことができませんね\n\nQ2-4 Q2-3で作成した表の、target2列を削除して、name,value,unitの順番に列を並び替えてください\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 %>% select(name, value, unit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  name  value unit  \n  <chr> <chr> <chr> \n1 AST   50    IU    \n2 HbA1c 5.0   %     \n3 BMI   23.1  kg/m^2\n4 AST   60    IU    \n5 HbA1c 5.0   %     \n6 BMI   18.1  kg/m^2\n```\n:::\n:::\n\n\n\nQ3-1 target3列のみに列を絞って、手術名(op:XX)を抜き出して新しい列nameを作成してください\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3 <- dat %>% \n  select(target3) %>% \n  mutate(name = str_extract(target3,\"(?<=ope:).+?(?= \\\\d)\"))\n```\n:::\n\n\n\nQ3-2 Q3-1で作成した表の、 target3列のの出血量をぬきだして新しい列、blood_lostを作成してください。今までと同じ方法ではうまくいきませんがなぜでしょうか？元のデータは触らずに、本来入力したかったであろう数値に置き換えてください。\n\nこれではうまくいきません\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3 %>% \n  mutate(blood_lost = str_extract(target3,\"\\\\d+(?=ml)\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  target3            name  blood_lost\n  <chr>              <chr> <chr>     \n1 ope:A 4.5hr 8Oml   A     <NA>      \n2 ope:B 3hr 10ml     B     10        \n3 ope:C 12.5hr 1OOml C     <NA>      \n4 ope:D 4.5hr 180ml  D     180       \n5 ope:E 3hr 120ml    E     120       \n6 ope:F 12.5hr 1OOml F     <NA>      \n```\n:::\n:::\n\n\n\n実は\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3$target3 %>% \n  str_view(\"O\") #大文字のオー\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │ ope:A 4.5hr 8<O>ml\n[3] │ ope:C 12.5hr 1<O><O>ml\n[6] │ ope:F 12.5hr 1<O><O>ml\n```\n:::\n:::\n\n\n\nという風に、一部のゼロが大文字のオーに置き換わっています。\\ということで、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3 %>% \n  mutate(blood_lost = str_extract(target3,\"(?<=hr\\\\s).+(?=ml)\")) %>% \n  mutate(blood_lost = str_replace(blood_lost,\"O\",\"0\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  target3            name  blood_lost\n  <chr>              <chr> <chr>     \n1 ope:A 4.5hr 8Oml   A     80        \n2 ope:B 3hr 10ml     B     10        \n3 ope:C 12.5hr 1OOml C     10O       \n4 ope:D 4.5hr 180ml  D     180       \n5 ope:E 3hr 120ml    E     120       \n6 ope:F 12.5hr 1OOml F     10O       \n```\n:::\n:::\n\n\n\n抜き出してから大文字のオーを、数字のゼロに置き換えます。ただし、オーが二つあるデータもあるので、一回だけでは全部置き換えられません。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3 %>% \n  mutate(blood_lost = str_extract(target3,\"(?<=hr\\\\s).+(?=ml)\")) %>% \n  mutate(blood_lost = str_replace(blood_lost,\"O\",\"0\")) %>% \n  mutate(blood_lost = str_replace(blood_lost,\"O\",\"0\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  target3            name  blood_lost\n  <chr>              <chr> <chr>     \n1 ope:A 4.5hr 8Oml   A     80        \n2 ope:B 3hr 10ml     B     10        \n3 ope:C 12.5hr 1OOml C     100       \n4 ope:D 4.5hr 180ml  D     180       \n5 ope:E 3hr 120ml    E     120       \n6 ope:F 12.5hr 1OOml F     100       \n```\n:::\n:::\n\n\n\nこのように、2回置き換えてもよいですが、それだと何回置き換えてよいかわからないケースも多いので、全部置き換えるstr_replace_allを利用しましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3 <- dat3 %>% \n  mutate(blood_lost = str_extract(target3,\"(?<=hr\\\\s).+(?=ml)\")) %>% \n  mutate(blood_lost = str_replace_all(blood_lost,\"O\",\"0\"))\n  \ndat3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  target3            name  blood_lost\n  <chr>              <chr> <chr>     \n1 ope:A 4.5hr 8Oml   A     80        \n2 ope:B 3hr 10ml     B     10        \n3 ope:C 12.5hr 1OOml C     100       \n4 ope:D 4.5hr 180ml  D     180       \n5 ope:E 3hr 120ml    E     120       \n6 ope:F 12.5hr 1OOml F     100       \n```\n:::\n:::\n\n\n\nこの_allが作関数他にもあって  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view_all(dat3$target3,\"O\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `str_view()` was deprecated in stringr 1.5.0.\nℹ Please use `str_view_all()` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │ ope:A 4.5hr 8<O>ml\n[2] │ ope:B 3hr 10ml\n[3] │ ope:C 12.5hr 1<O><O>ml\n[4] │ ope:D 4.5hr 180ml\n[5] │ ope:E 3hr 120ml\n[6] │ ope:F 12.5hr 1<O><O>ml\n```\n:::\n\n```{.r .cell-code}\nstr_extract_all(c(\"abc\",\"aba\",\"abcba\"), \"a\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] \"a\"\n\n[[2]]\n[1] \"a\" \"a\"\n\n[[3]]\n[1] \"a\" \"a\"\n```\n:::\n:::\n\n\n\nこんな感じでviewやextractにもあります。extractの結果はListというもので、まだ解説していませんので、わからなくて結構です。\n\nまた、置き換えるときに、複数個置き換えたいばあいは、str_replace_allを利用すると便利です。\n\nQ3-3 Q3-2で作成した表の、target3列のhr前の時間を抜き出して新しい列、time_hrを作成してください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3 <- dat3 %>% \n  mutate(time_hr = str_extract(target3,\"(?<=\\\\s)(\\\\d+\\\\.\\\\d+|\\\\d+)(?=hr)\"))\n```\n:::\n\n\n\nQ3-4 Q3-3で作成した表の、target3列を削除して、name, blood_lost, time_hrの順番に並び替えてください。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3 %>% \n  select(name, blood_lost, time_hr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  name  blood_lost time_hr\n  <chr> <chr>      <chr>  \n1 A     80         4.5    \n2 B     10         3      \n3 C     100        12.5   \n4 D     180        4.5    \n5 E     120        3      \n6 F     100        12.5   \n```\n:::\n:::\n\n\n\n以上でstringrの練習問題の解説終了です！\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}