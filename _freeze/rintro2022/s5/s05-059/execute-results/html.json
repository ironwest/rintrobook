{
  "hash": "e961b8aa064f2371c3c1e01f46ac44e3",
  "result": {
    "markdown": "---\ntitle: 実践 replace_na \npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- tibble(\n  x = c(1,2,NA,4,5),\n  y = c(\"a\",NA,\"c\",NA,NA),\n  z = c(\"A\",NA,NA,\"B\",\"C\")\n)\n\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n      x y     z    \n  <dbl> <chr> <chr>\n1     1 a     A    \n2     2 <NA>  <NA> \n3    NA c     <NA> \n4     4 <NA>  B    \n5     5 <NA>  C    \n```\n:::\n:::\n\n\n\nこの欠損値を置き換えていきます。\n\nまずは、xを0、yをmiss、zをMISSで置き換えてみます。ひとつ前の動画で学んだListをさっそく使ってみましょう\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  replace_na(list(x = 0, y = \"miss\", z = \"MISS\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n      x y     z    \n  <dbl> <chr> <chr>\n1     1 a     A    \n2     2 miss  MISS \n3     0 c     MISS \n4     4 miss  B    \n5     5 miss  C    \n```\n:::\n:::\n\n\n\n簡単ですね?\n\nあと実は、ベクトルの置き換えも可能なので、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- dat %>% \n  mutate(x = replace_na(x, 0),\n         y = replace_na(y,\"miss\"),\n         z = replace_na(z,\"MISS\"))\ndat2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n      x y     z    \n  <dbl> <chr> <chr>\n1     1 a     A    \n2     2 miss  MISS \n3     0 c     MISS \n4     4 miss  B    \n5     5 miss  C    \n```\n:::\n:::\n\n\n\n長くなりますが、mutateの中で利用することも可能です。\n\nいかがでしょうか?\n\n実は、replace_naの逆を行う関数もありますのでここで一緒に解説しておきます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 %>% \n  mutate(y = na_if(y,\"miss\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n      x y     z    \n  <dbl> <chr> <chr>\n1     1 a     A    \n2     2 <NA>  MISS \n3     0 c     MISS \n4     4 <NA>  B    \n5     5 <NA>  C    \n```\n:::\n:::\n\n\n\nこのように、replace_naと逆の動きをするna_if関数を利用すれば、必要のない値をNAに変換するということも可能です。\n\nna_ifの使い方は、\n\nna_if(列名,NAにしたい値)\n\nでOKです。\n\n以上、NAの置き換えの話題でした。\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}