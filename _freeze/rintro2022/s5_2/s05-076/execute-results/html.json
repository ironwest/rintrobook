{
  "hash": "6544c7e0a004d2a258e6a51fc556cca6",
  "result": {
    "markdown": "---\ntitle: 看護記録もどきの加工2\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n{\n  kiroku7 <- readxl::read_excel(\"data/看護記録もどき.xlsx\") %>% \n    mutate(name = \n            if_else(\n              str_detect(`患者名`,\"^\\\\s\"), \n              NA_character_,\n              `患者名`)) %>%\n    fill(name) %>% \n    select(name, sokutei = `患者名`, everything()) %>% \n    mutate(sokutei = if_else(\n      str_detect(sokutei,\"^\\\\s\"),\n      sokutei, \"admission\"\n    )) %>% \n    mutate(sokutei = str_trim(sokutei)) %>% \n    pivot_longer(cols = !c(name,sokutei),\n                names_to = \"date\",\n                values_to = \"val\") %>%\n    filter(!is.na(val))\n}\n```\n:::\n\n\n\n例えば処理例として、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwide <- kiroku7 %>% \n  pivot_wider(\n    id_cols = c(name, date),\n    names_from = sokutei,\n    values_from = val\n  ) %>% \n  arrange(name, date)\n```\n:::\n\n\n\nで、sokutei項目毎の列を入れたwideデータに変換して、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(wide)\n\nwide2 <- wide %>% \n  rename(bp = `血圧`, pulse = `脈拍`, rr = `呼吸回数`, meal = `食事`)\n```\n:::\n\n\n\n変数名を英語に変えておいて、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwide2 %>% \n  select(bp) %>% \n  separate(bp,c(\"am\",\"pm\"),sep=\"-\", remove=FALSE) %>% \n  separate(am,c(\"am_sbp\",\"am_dbp\"), sep=\"/\",remove=FALSE) %>% \n  separate(pm,c(\"pm_sbp\",\"pm_dbp\"), sep=\"/\",remove=FALSE) %>%\n  mutate(\n    am_sbp = str_trim(am_sbp) %>% na_if(\"\"),\n    pm_sbp = na_if(pm_sbp,\"\")\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 1 rows [1].\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 1 rows [4].\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  bp            am       am_sbp am_dbp pm       pm_sbp pm_dbp\n  <chr>         <chr>    <chr>  <chr>  <chr>    <chr>  <chr> \n1 　　　-128/88 　　　   <NA>   <NA>   \"128/88\" 128    88    \n2 130/78-120/72 130/78   130    78     \"120/72\" 120    72    \n3 128/82-140/76 128/82   128    82     \"140/76\" 140    76    \n4 130/68　-     130/68　 130    68　   \"\"       <NA>   <NA>  \n5 100/60-98/58  100/60   100    60     \"98/58\"  98     58    \n6 106/54-90/50  106/54   106    54     \"90/50\"  90     50    \n```\n:::\n:::\n\n\n\nこんな感じで、bp列を午前と午後のSBP、DBP、計4つの列に分割します。\n\n同じように、脈拍、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwide2 %>% \n  select(pulse) %>% \n  separate(pulse,c(\"am_pulse\",\"pm_pulse\"), remove=FALSE) %>% \n  mutate(pm_pulse = na_if(pm_pulse,\"\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  pulse     am_pulse pm_pulse\n  <chr>     <chr>    <chr>   \n1 92　-　90 92       90      \n2 89　-　83 89       83      \n3 83　-　80 83       80      \n4 88　-     88       <NA>    \n5 60　-　62 60       62      \n6 64　-　66 64       66      \n```\n:::\n:::\n\n\n\n呼吸回数\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwide2 %>% \n  select(rr) %>% \n  separate(rr,c(\"am_rr\",\"pm_rr\"),\n           sep=\"-\",remove=FALSE) %>% \n  mutate(\n    am_rr = str_replace(am_rr,\"回\",\"\"),\n    pm_rr = \n      str_replace(pm_rr,\"回\",\"\") %>% \n      str_trim() %>% \n      na_if(\"\")\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  rr        am_rr pm_rr\n  <chr>     <chr> <chr>\n1 16　-　20 16　  20   \n2 12回-16回 12    16   \n3 20　-　16 20　  16   \n4 16　-     16　  <NA> \n5 20　-　16 20　  16   \n6 16　-　20 16　  20   \n```\n:::\n:::\n\n\n\n食事\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwide2 %>% \n  select(meal) %>% \n  separate(meal, c(\"morning_meal\",\"lunch_meal\",\"dinner_meal\"),\n           sep=\"-\", remove=FALSE) %>% \n  mutate(\n    morning_meal = \n      str_remove(morning_meal,\"割\") %>% \n      str_trim() %>% \n      na_if(\"\")\n  ) %>% \n  mutate(\n    lunch_meal = str_remove(lunch_meal,\"割\") %>% \n      str_trim() %>% \n      na_if(\"\")\n  ) %>% \n  mutate(\n    dinner_meal = str_remove(dinner_meal,\"割\") %>% \n      str_trim() %>% \n      na_if(\"\")\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 3 pieces. Missing pieces filled with `NA` in 1 rows [4].\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  meal           morning_meal lunch_meal dinner_meal\n  <chr>          <chr>        <chr>      <chr>      \n1 　-10-8        <NA>         10         8          \n2 8割-9割-10割   8            9          10         \n3 7割-8割-10割   7            8          10         \n4 10-            10           <NA>       <NA>       \n5 -10割-10割     <NA>         10         10         \n6 10割-10割-10割 10           10         10         \n```\n:::\n:::\n\n\n\nも分割することが可能です。\n次の動画で、これらをまとめて処理をしていきます。\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}