{
  "hash": "732df71409f1ef4e1cba9a0faa1135c1",
  "result": {
    "markdown": "---\ntitle: 看護記録もどきの加工1\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\nそれでははじめます。\n必要なパッケージの読み込みましょう\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n```\n:::\n\n\n\nまずはインポートです。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkiroku <- readxl::read_excel(\"data/看護記録もどき.xlsx\")\n\nView(kiroku)\n```\n:::\n\n\n\nだいぶややこしいですが順番に考えていきます。\n\nまず、「患者名」列をなんとかしましょう\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkiroku %>% select(`患者名`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 1\n   患者名    \n   <chr>     \n 1 Aさん     \n 2 　血圧    \n 3 　脈拍    \n 4 　呼吸回数\n 5 　食事    \n 6 Bさん     \n 7 　血圧    \n 8 　脈拍    \n 9 　呼吸回数\n10 　食事    \n```\n:::\n:::\n\n\n\n患者名の下に、それぞれの測定項目の名前が記載されているため、「患者名」の列をもとに、nameという列を作成して、そこに、患者名を埋めていくようにしてみましょう。\n\n注目する列だけを抜き出して変化をみると、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkiroku %>% \n  select(`患者名`) %>% \n  mutate(name = \n           if_else(\n             str_detect(`患者名`,\"^\\\\s\"), \n             NA_character_,\n             `患者名`)) %>%\n  fill(name)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   患者名     name \n   <chr>      <chr>\n 1 Aさん      Aさん\n 2 　血圧     Aさん\n 3 　脈拍     Aさん\n 4 　呼吸回数 Aさん\n 5 　食事     Aさん\n 6 Bさん      Bさん\n 7 　血圧     Bさん\n 8 　脈拍     Bさん\n 9 　呼吸回数 Bさん\n10 　食事     Bさん\n```\n:::\n:::\n\n\n\nこんな感じで、Aさんの行なのかBさんのデータがある行なのか、name列を見ることで班別することができるようになりました。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkiroku2 <- kiroku %>% \n  mutate(name = \n           if_else(\n             str_detect(`患者名`,\"^\\\\s\"), \n             NA_character_,\n             `患者名`)) %>%\n  fill(name)\n\nkiroku2  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 6\n   患者名     `4月1日`      `4月2日`      `4月3日`      `4月4日`       name \n   <chr>      <chr>         <chr>         <chr>         <chr>          <chr>\n 1 Aさん      入院          <NA>          <NA>          退院           Aさん\n 2 　血圧     　　　-128/88 130/78-120/72 128/82-140/76 130/68　-      Aさん\n 3 　脈拍     92　-　90     89　-　83     83　-　80     88　-          Aさん\n 4 　呼吸回数 16　-　20     12回-16回     20　-　16     16　-          Aさん\n 5 　食事     　-10-8       8割-9割-10割  7割-8割-10割  10-            Aさん\n 6 Bさん      <NA>          <NA>          入院          <NA>           Bさん\n 7 　血圧     <NA>          <NA>          100/60-98/58  106/54-90/50   Bさん\n 8 　脈拍     <NA>          <NA>          60　-　62     64　-　66      Bさん\n 9 　呼吸回数 <NA>          <NA>          20　-　16     16　-　20      Bさん\n10 　食事     <NA>          <NA>          -10割-10割    10割-10割-10割 Bさん\n```\n:::\n:::\n\n\n\n次に、「患者名」列からすでに患者名はとりだしたので、名前を、「測定項目」として、並び替えておきます\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkiroku3 <- kiroku2 %>% \n  select(name, sokutei = `患者名`, everything())\n```\n:::\n\n\n\nselectでもrenameと同じ書き方できたの覚えていますか？また、everything()とすることで、残りの列も選択できるので変数名を変えながら並び替えることができます。\n\n次に、sokutei列で、患者名が書いてある行は入退院に関するデータが含まれているので、その行をadmissionと書き換えます。\n\n列だけ取り出して変換をみてみると、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkiroku3 %>% \n  select(sokutei) %>% \n  mutate(sokutei2 = \n           if_else(str_detect(sokutei,\"^\\\\s\"),\n                   sokutei, \"admission\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   sokutei    sokutei2  \n   <chr>      <chr>     \n 1 Aさん      admission \n 2 　血圧     　血圧    \n 3 　脈拍     　脈拍    \n 4 　呼吸回数 　呼吸回数\n 5 　食事     　食事    \n 6 Bさん      admission \n 7 　血圧     　血圧    \n 8 　脈拍     　脈拍    \n 9 　呼吸回数 　呼吸回数\n10 　食事     　食事    \n```\n:::\n:::\n\n\n\nこんな感じで、sokutei列のスペースが先頭にあればもとのまま、なければadmissionに書き換えるという処理を行います。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkiroku4 <- kiroku3 %>% \n  mutate(sokutei = if_else(\n    str_detect(sokutei,\"^\\\\s\"),\n    sokutei, \"admission\"\n  ))\n\nkiroku4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 6\n   name  sokutei    `4月1日`      `4月2日`      `4月3日`      `4月4日`      \n   <chr> <chr>      <chr>         <chr>         <chr>         <chr>         \n 1 Aさん admission  入院          <NA>          <NA>          退院          \n 2 Aさん 　血圧     　　　-128/88 130/78-120/72 128/82-140/76 130/68　-     \n 3 Aさん 　脈拍     92　-　90     89　-　83     83　-　80     88　-         \n 4 Aさん 　呼吸回数 16　-　20     12回-16回     20　-　16     16　-         \n 5 Aさん 　食事     　-10-8       8割-9割-10割  7割-8割-10割  10-           \n 6 Bさん admission  <NA>          <NA>          入院          <NA>          \n 7 Bさん 　血圧     <NA>          <NA>          100/60-98/58  106/54-90/50  \n 8 Bさん 　脈拍     <NA>          <NA>          60　-　62     64　-　66     \n 9 Bさん 　呼吸回数 <NA>          <NA>          20　-　16     16　-　20     \n10 Bさん 　食事     <NA>          <NA>          -10割-10割    10割-10割-10割\n```\n:::\n:::\n\n\n\nこれで各行に対してsokuteiコラムでラベルをつけることができたので、先頭の余分なスペースを削除してからタテのデータに変換します\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp <- kiroku4 %>% \n  select(sokutei) %>% \n  mutate(sokutei2 = str_trim(sokutei))\n\nstr_view_all(temp$sokutei,\"\\\\s\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `str_view()` was deprecated in stringr 1.5.0.\nℹ Please use `str_view_all()` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] │ admission\n [2] │ <{\\u3000}>血圧\n [3] │ <{\\u3000}>脈拍\n [4] │ <{\\u3000}>呼吸回数\n [5] │ <{\\u3000}>食事\n [6] │ admission\n [7] │ <{\\u3000}>血圧\n [8] │ <{\\u3000}>脈拍\n [9] │ <{\\u3000}>呼吸回数\n[10] │ <{\\u3000}>食事\n```\n:::\n\n```{.r .cell-code}\nstr_view_all(temp$sokutei2,\"\\\\s\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] │ admission\n [2] │ 血圧\n [3] │ 脈拍\n [4] │ 呼吸回数\n [5] │ 食事\n [6] │ admission\n [7] │ 血圧\n [8] │ 脈拍\n [9] │ 呼吸回数\n[10] │ 食事\n```\n:::\n:::\n\n\n\nスペース、消えていますね?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkiroku5 <- kiroku4 %>% \n  mutate(sokutei = str_trim(sokutei))\n\nkiroku5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 6\n   name  sokutei   `4月1日`      `4月2日`      `4月3日`      `4月4日`      \n   <chr> <chr>     <chr>         <chr>         <chr>         <chr>         \n 1 Aさん admission 入院          <NA>          <NA>          退院          \n 2 Aさん 血圧      　　　-128/88 130/78-120/72 128/82-140/76 130/68　-     \n 3 Aさん 脈拍      92　-　90     89　-　83     83　-　80     88　-         \n 4 Aさん 呼吸回数  16　-　20     12回-16回     20　-　16     16　-         \n 5 Aさん 食事      　-10-8       8割-9割-10割  7割-8割-10割  10-           \n 6 Bさん admission <NA>          <NA>          入院          <NA>          \n 7 Bさん 血圧      <NA>          <NA>          100/60-98/58  106/54-90/50  \n 8 Bさん 脈拍      <NA>          <NA>          60　-　62     64　-　66     \n 9 Bさん 呼吸回数  <NA>          <NA>          20　-　16     16　-　20     \n10 Bさん 食事      <NA>          <NA>          -10割-10割    10割-10割-10割\n```\n:::\n:::\n\n\n\nここまできたら、これは横持ちデータで、日付のデータが列名になってしまっている形なのでpivot_longerで縦持ちデータに直しましょう\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkiroku6 <- kiroku5 %>% \n  pivot_longer(cols = !c(name,sokutei),\n               names_to = \"date\",\n               values_to = \"val\")\n\nkiroku6\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 40 × 4\n   name  sokutei   date   val          \n   <chr> <chr>     <chr>  <chr>        \n 1 Aさん admission 4月1日 入院         \n 2 Aさん admission 4月2日 <NA>         \n 3 Aさん admission 4月3日 <NA>         \n 4 Aさん admission 4月4日 退院         \n 5 Aさん 血圧      4月1日 　　　-128/88\n 6 Aさん 血圧      4月2日 130/78-120/72\n 7 Aさん 血圧      4月3日 128/82-140/76\n 8 Aさん 血圧      4月4日 130/68　-    \n 9 Aさん 脈拍      4月1日 92　-　90    \n10 Aさん 脈拍      4月2日 89　-　83    \n# ℹ 30 more rows\n```\n:::\n:::\n\n\n\nNAとなっている部分はデータが存在しないので消します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkiroku7 <- kiroku6 %>%\n  filter(!is.na(val))\n\nkiroku7\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 27 × 4\n   name  sokutei   date   val          \n   <chr> <chr>     <chr>  <chr>        \n 1 Aさん admission 4月1日 入院         \n 2 Aさん admission 4月4日 退院         \n 3 Aさん 血圧      4月1日 　　　-128/88\n 4 Aさん 血圧      4月2日 130/78-120/72\n 5 Aさん 血圧      4月3日 128/82-140/76\n 6 Aさん 血圧      4月4日 130/68　-    \n 7 Aさん 脈拍      4月1日 92　-　90    \n 8 Aさん 脈拍      4月2日 89　-　83    \n 9 Aさん 脈拍      4月3日 83　-　80    \n10 Aさん 脈拍      4月4日 88　-        \n# ℹ 17 more rows\n```\n:::\n:::\n\n\n\n最終的にどのような形にもっていきたいかでこの先の処理は変わります。次の動画では、この先の処理の一例をお示しします。\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}