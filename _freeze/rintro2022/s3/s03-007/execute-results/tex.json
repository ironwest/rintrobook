{
  "hash": "23689e99fd49aa9350259cbb0101ffdd",
  "result": {
    "markdown": "---\ntitle: テキストファイルの読み込み(L42)\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\n\n\n**注:この記事の内容は、ファイルの置き場所等の問題で、実行結果は表示されていません**\n\nそれでは、1つ前の動画で開いた、ワーキングディレクトリの中に、「ichiji」という名前のフォルダを作成して、その中に、「tekitou.txt」という名前のファイルを作りましょう。\n\ntekitou.txtに、好きな文字をアルファベットと数字のみを記載して保存しておきます。\n \nこの動画では、このテキストファイルに記載した文字列を読み込んでいきます。\n\n読み込むために必要な関数は、readrパッケージに含まれるread_file関数です。readrパッケージは、tidyverseで自動的に読み込まれるパッケージに含まれるので、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\nとするだけで、read_fまで入力すると、予測候補にでてくるようになっているはずです。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?read_file\n```\n:::\n\n\n\nヘルプの内容のUsage を確認すると、fileとlocale　Argumentがあり、そのうち、デフォルト値が設定されていないものはfileargumentのみです。\n\nfile argumentを確認すると、英文が色々と書いてありますが、ここで大切なのは最初の一文です。\n\nEither a path to a file, a connection, or literal data (either a single string or a raw vector).\n\nと記載されており、ファイルへのパス、コネクションか、リテラルデータを与える\n \nとなっています。\n \nということで、先ほど作成したtekitou.txtのフルパスをまず与えてみましょう。\n \n私の場合、フルパスは、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetwd()\n```\n:::\n\n\n\nの中のichijiフォルダの中にあるtekitou.txtファイルなので、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_path <- \"D:/R_Course_2021/Section3_インポート/ichiji/tekitou.txt\"\n```\n:::\n\n\n\nfull_pathという変数名に保存しておいてあげて、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_file(full_path)\n```\n:::\n\n\n\nで無事に読み込むことができました！もちろん、変数に一時的に保存しておかなくても、直接フルパスを書いて\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_file(\"D:/R_Course_2021/Section3_インポート/ichiji/tekitou.txt\")\n```\n:::\n\n\n\n読み込むことも可能です。ここで注意が必要なのは、ただ読み込んだだけではそれを使うことができないという点です。\n\n読み込んで、別の用途に利用したいような場合は、変数に保存してあげる必要があります。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_hensu <- read_file(full_path)\nnew_hensu\n```\n:::\n\n\n\nそんなに難しくないですね?\n\n\nまた相対パスで指定して読み込むことも可能です。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_wd()#を基準として、\nfull_path#にたどり着く相対パスをちょっと考えてみてください。\n\nread_file(\"ichiji/tekitou.txt\")\n```\n:::\n\n\n\nこうですね？\n\n相対パス、フルパスよりかなり便利なのですが、それでも毎回打ち出すことにめんどくさくないでしょうか？\n\nそういった方に、RStudioでは、ctrl+spaceキーを\"\"の中で押すことで予測変換のような機能が実装されています。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_file(\"\") #予測変換で入力してみる\n```\n:::\n\n\n\nいかがでしょうか？ctrl+spaceを押すたびに、そのディレクトリにあるファイルやフォルダを一覧表示して選択できるようになっています。\n\n長いファイルやフォルダ名であっても、これで入力ミス少なくこれで入力できます。\n\n以上が基本的な「読み込む」ための関数の使い方になります。\n\n次の動画は、この動画で学んだことについての課題です\n",
    "supporting": [
      "s03-007_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}