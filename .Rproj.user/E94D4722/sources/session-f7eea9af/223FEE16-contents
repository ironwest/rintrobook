---
title: Powerpointへの出力
page-layout: full
title-block-banner: true
comments: false
---

それでは、ここからはPowerpointファイルへの出力について実施していきます。
 
これも、実はYAMLをいじるだけで良いのですがそのYAMLの内容、あまり沢山覚えるのも大変なので、RStudioに作成してもらいましょう。
 
 File -> New File -> RMarkdown ->Presentation -> PowerPoint
 
 で新しくファイルを作成してみてください。
 
 それで表示されたファイルのYAMLを見ていただくと、
 
 output: powerpoint_presentation
 
となっており、この記載があると、Knitボタンのところにスライドで出力するオプションが色々と表示されているはずです。
 
HTMLでプレゼンできるフォーマットもあったりしますが、本コースではPowerpointに絞って話を進めます。
 
とりあえず、RStudioが作成してくれたファイルを適当な名前で保存して、Knitしてみましょう
 
Powerpointファイルが生成されましたね?
 
それでは、Wordを作成するときに利用したRmdファイルを利用して同じ内容でPowerPointファイルを作成してみましょう。

```{filename="example6.Rmd"} 
---
title: "Example"
author: "Nishida Norimitsu"
date: "2021/5/20"
output: powerpoint_presentation
---

<!-- このファイルはExample4、Example5と内容はほぼ一緒で、YAMLを

output:powerpoint_presentation

という記載をしてあります。
あと、gtsummaryで出力される形式はPowerPointでは表示がうまくいかないので、gtsummary::as_flex_tableという関数で形式を変換して、あとはフォントサイズや表の幅等を調整してあります。

このままKnitしてもpowerpointファイルが出力されるので試してみてください。

また、Knitボタンの右横の歯車ボタンをクリックしていただいて、一番したのOutput Optionから色々と設定の変更が可能です(YAMLとかsetupチャンクの内容が自動的に書き換わる)ので、色々とご自身で試してみてください。
-->

```{r setup, include=FALSE}
knitr::opts_chunk$set(
	echo = FALSE,
	message = FALSE,
	warning = FALSE
)
library(tidyverse)
```


## 説明文

* さて、ここでは、色々な形に分析結果を出力したい場合の方法を考えましょう。
* ここでは、比確的よく利用されると想定されるpowerpointとwordファイルへの出力をご説明します。
* 尚、powerpointはスライドの区切りが##となつておりますので注意してください。
* また、全体のチャンクの設定でR関係のものを表示しないようにしてあります。

## 画像を含む区分

```{r}
ggplot(cars) +
  geom_point(aes(x=speed,y=dist))+
  theme_classic()
```

## 表を含む区分

```{r}
gtsummary::tbl_summary(cars) %>%
  gtsummary::as_flex_table() %>% 
  flextable::fontsize(size=24, part="all") %>% 
  flextable::width(j=c(1,2),width=4)
```

```
