{
  "hash": "67bd81fad0d3bbebba9ed54079e34a59",
  "result": {
    "markdown": "---\ntitle: X軸のテキストが重なる場合の解消法\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\nグラフを作成していてよくある困りごとがx軸にカテゴリカル変数を入れた場合にその文字列が長すぎてしまう場合です。\n\nちょっと極端ですが、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable <- tibble(\n  item_name　= c(\"究極のマスクメロンアイスクリーム\",\n                \"イチゴたっぷりショートケーキイタリア風\",\n                \"和栗の贅沢ブラックモンブラン\",\n                \"朝どれ卵のなめらかプリン\",\n                \"マンゴーと南国フルーツのタルト\",\n                \"フルーツをたっぷりつかったロールケーキ\"),\n  uriage_kosu = c(39,42,73,88,93,132)\n)\n\ngg <- ggplot(table) + \n  geom_col(aes(item_name, uriage_kosu), stat=\"identity\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_col(aes(item_name, uriage_kosu), stat = \"identity\"): Ignoring\nunknown parameters: `stat`\n```\n:::\n\n```{.r .cell-code}\ngg\n```\n\n::: {.cell-output-display}\n![](s04-024_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\nこのようにX軸が重なってしまったというときの回避策をここで解説しておきます。なお、ここでは、x軸の表示の話であるためscale_x_discreteで設定をいじっていきます。\n\n* scale_color_discreteでlegendの設定をいじったのと同じようなイメージです。\n\nその1:x軸の表示を回転させる\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg +\n  scale_x_discrete(guide = guide_axis(angle=45))\n```\n\n::: {.cell-output-display}\n![](s04-024_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nできました！\n\nここでは、scale_x_discreteのguideアーギュメントに、guide_axis関数の結果をわたしてあげることでグラフの表示を操作しています\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguide_axis(angle=45)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$title\nlist()\nattr(,\"class\")\n[1] \"waiver\"\n\n$check.overlap\n[1] FALSE\n\n$angle\n[1] 45\n\n$n.dodge\n[1] 1\n\n$order\n[1] 0\n\n$position\nlist()\nattr(,\"class\")\n[1] \"waiver\"\n\n$available_aes\n[1] \"x\" \"y\"\n\n$name\n[1] \"axis\"\n\nattr(,\"class\")\n[1] \"guide\" \"axis\" \n```\n:::\n:::\n\n\n\nまた、実はggplot2が難しいといわれる理由の一つに、同じ結果を複数の書き方で実現できてしまうところがあります。\n\nscale_x_discreteでなくて、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg +\n　theme(axis.text.x = element_text(angle=45,hjust=1))\n```\n\n::: {.cell-output-display}\n![](s04-024_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nthemeでaxis.text.xの設定をいじっても同じ効果になります。\n\nただし、theme_classicなどを設定すると上書きされるので、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg +\n  theme(axis.text.x = element_text(angle=45, hjust = 1)) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](s04-024_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n注意が必要です。\n\nhjustやtheme_xxの上書き等気にしないといけないことが多いので、scale_x_discreteのguideをいじるほうが良いと思います。\n\nその2:x軸の表示をずらす\n\nこちらの方法もguideで設定できます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg +\n  scale_x_discrete(guide = guide_axis(n.dodge = 3))\n```\n\n::: {.cell-output-display}\n![](s04-024_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\ngg + \n  scale_x_discrete(guide = guide_axis(n.dodge = 4))\n```\n\n::: {.cell-output-display}\n![](s04-024_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\n\nこんな感じで、guide_axisのn.dodgeアーギュメントに数字を与えてあげることで、テキストをずらして表示することが可能です。\n\nこのグラフの問題としてはグラフ自体は拡大すると文字が全部入りますが、小さいグラフで文字がはみ出てしまっています。何とかす\nるために、余白を増やしてあげましょうグラフ全体の余白はthemeでplot.marginに\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmargin(1,2,3,4,\"pt\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1points 2points 3points 4points\n```\n:::\n:::\n\n\n\n関数の結果を与えてあげることで実現できます\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg + \n  scale_x_discrete(guide = guide_axis(n.dodge = 6)) +\n  theme(plot.margin = margin(10,40,10,20,\"pt\"))\n```\n\n::: {.cell-output-display}\n![](s04-024_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\nいかがでしょうか?\n",
    "supporting": [
      "s04-024_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}