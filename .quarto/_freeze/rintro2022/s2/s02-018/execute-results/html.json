{
  "hash": "e6cbd20e290d5de8aa9b963d428e5f12",
  "result": {
    "markdown": "---\ntitle: ベクトル(長さが違うもの同士の計算)(L23)\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\nここからは、ベクトル同士の計算で要素の長さが違った場合について\n考えていきましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlen_5 <- c(1,2,3,4,5)\nlen_10 <- c(10,20,30,40,50,60,70,80,90,100)\n```\n:::\n\n\n\nこんな風に、長さが5のベクトルと、10のベクトルがあった場合に、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlen_5 + len_10 \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  11  22  33  44  55  61  72  83  94 105\n```\n:::\n:::\n\n\n\nは、こんな結果でした。\n\n\n`[1]  11  22  33  44  55  61 72  83  94 105`\n\n\nこの結果は\n```\n\n1   2   3   4   5   1   2   3   4   5　 <-len_5が2回繰り返し\n10  20  30  40  50  60  70  80  90  100 <-len_10が1回繰り返し\n```\n\nと、短い方を、複数繰り返して、その繰り返しとの計算が行われ結果になります\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlen_10 + len_5  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  11  22  33  44  55  61  72  83  94 105\n```\n:::\n:::\n\n\n\nということで、順番をいれかてもお同じ結果になりますね。\n\nじつは、一番最初の計算でご紹介した、ただの数字も、長さ1のベクトルだと考えれば、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlen_5 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2 3 4 5 6\n```\n:::\n\n```{.r .cell-code}\n1 + len_5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2 3 4 5 6\n```\n:::\n:::\n\n\n\nは、長さ1のベクトルが5回繰り返されたものという風に考えられます。\n```\n\n1 2 3 4 5   <- len_5 が1回\n1 1 1 1 1   <- 1が5回繰り替えされている。\n```\n\nまた、繰り返した結果、回数がぴったり丁度で終わらない場合も、一番長いベクトルが1回、それに帳尻を合わせるために、短いものが複数回繰り返されるとイメージできると良いです。（警告が出ますけどね）\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlen_3 <- c(1,2,3)\nlen_7 <- c(10,20,30,40,50,60,70)\n\nlen_3 + len_7\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in len_3 + len_7: longer object length is not a multiple of shorter\nobject length\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11 22 33 41 52 63 71\n```\n:::\n\n```{.r .cell-code}\nlen_7 + len_3\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in len_7 + len_3: longer object length is not a multiple of shorter\nobject length\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11 22 33 41 52 63 71\n```\n:::\n:::\n\n\n\n-> 結果は、11 22 33 41 52 63 71 \n\nlen_7の長さで7個の要素が結果に。\n```\n\n1  2  3  1  2  3  1  2  3  len_3が3回繰り返し\n10 20 30 40 50 60 70       len_7が1回繰り返し\n```\n\nこの場合、警告/Warningが表示されて、長さが違うと怒られていますが、計算は可能です。ただし、普段分析等を行っていて、このエラーがでることはなにかが間違っている可能性が高いので、自分が確信をもって、長さの違うベクトルを足し合わせた場合以外は問題が起こっていないかをチェックするほうがよいでしょう。\n\nお疲れさまでした、以上、ベクトルの基本の基本の解説でした。\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}