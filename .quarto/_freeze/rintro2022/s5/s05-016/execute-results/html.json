{
  "hash": "b6f235533b8e9ccf51e2216ad24c4521",
  "result": {
    "markdown": "---\ntitle: select()の練習問題\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\nこの練習問題では、data/select.xlsxのファイルを利用します。\n\n課題1:\n \ndata/select.xlsxファイルを読み込んでください。\n\n解答1:\n\nエクセルファイルなので、tidyverseに追加して、readxlパッケージも読み込んでおきましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n\ndat <- read_excel(\"data/select.xlsx\")\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  `このデータは健康診断データ（の列名だけを適当に作成したもの）です`        \n  <chr>                                                                     \n1 ここを読み込んでしまった場合は、シート名の設定をやりなおしてみてください。\n```\n:::\n:::\n\n\n\n申し訳ありません。罠を仕掛けてみました。\nエクセルファイルは、ファイルの中に、シー構造があるので、一番最初のシートが目とするデータでない場合は、読み込むシートを指定しあげる必要があります。\nなので、正しいスクリプトは、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- read_excel(\"data/select.xlsx\", sheet=\"data\")\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 30\n     id   sex   age marrital_status occu_status pregnancy_status smoking_status\n  <dbl> <dbl> <dbl>           <dbl>       <dbl>            <dbl>          <dbl>\n1     1     2     3               4           5                6              7\n# ℹ 23 more variables: smoking_years <dbl>, smoking_number <dbl>,\n#   alcohol_status <dbl>, alcohol_frequency <dbl>, alcohol_volume <dbl>,\n#   kensa_ldl <dbl>, kensa_tg <dbl>, kensa_ast <dbl>,\n#   kensa_altkensa_glucose <dbl>, urine_glucose <dbl>, urine_protein <dbl>,\n#   q1 <dbl>, q2 <dbl>, q3 <dbl>, q4 <dbl>, q5 <dbl>, ecg1 <dbl>, ecg2 <dbl>,\n#   ecg3 <dbl>, chest_xp1 <dbl>, chest_xp2 <dbl>, chest_xp3 <dbl>,\n#   address <dbl>\n```\n:::\n:::\n\n\n\nとなります。\nコラム名が多数ありますが、tibbleだと、このよう1画面で全部の名前の確認が可能です。\n\nまた、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"id\"                     \"sex\"                    \"age\"                   \n [4] \"marrital_status\"        \"occu_status\"            \"pregnancy_status\"      \n [7] \"smoking_status\"         \"smoking_years\"          \"smoking_number\"        \n[10] \"alcohol_status\"         \"alcohol_frequency\"      \"alcohol_volume\"        \n[13] \"kensa_ldl\"              \"kensa_tg\"               \"kensa_ast\"             \n[16] \"kensa_altkensa_glucose\" \"urine_glucose\"          \"urine_protein\"         \n[19] \"q1\"                     \"q2\"                     \"q3\"                    \n[22] \"q4\"                     \"q5\"                     \"ecg1\"                  \n[25] \"ecg2\"                   \"ecg3\"                   \"chest_xp1\"             \n[28] \"chest_xp2\"              \"chest_xp3\"              \"address\"               \n```\n:::\n:::\n\n\n\nとしてあげることで、コラム名をベクトルとしとりだすこともできるので、合わせて覚えおいてもよいかもしれません。\n\n課題2: 最後のコラム、addressを、id,sex,ageの後 に移動させてください。\n\n解答2:\n\nこれはeverything()を使ってあげる必要があります\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- dat %>% \n  select(id,sex,age, address, everything())\n```\n:::\n\n\n\nあるいは、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- dat %>% \n  select(id:age, address, everything())\n```\n:::\n\n\n\n課題3:\n\nid,sex,age,addressと喫煙に関するsmoking_, 飲酒に関するalcohol_ではじまる変数を選択してください\n\n解答3:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat3 <- dat2 %>% \n  select(id:address, \n         starts_with(\"smoking_\"), \n         starts_with(\"alcohol_\"))\ndat3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 10\n     id   sex   age address smoking_status smoking_years smoking_number\n  <dbl> <dbl> <dbl>   <dbl>          <dbl>         <dbl>          <dbl>\n1     1     2     3      30              7             8              9\n# ℹ 3 more variables: alcohol_status <dbl>, alcohol_frequency <dbl>,\n#   alcohol_volume <dbl>\n```\n:::\n:::\n\n\n\n課題4: \nidからaddressまでと、statusで終わる列を取得してください。ただし、smokingとalcoholで始まるものを除外してください。\n\n解答4：\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat4 <- dat2 %>% \n  select(id:address, ends_with(\"_status\")) %>% \n  select(!c(alcohol_status,smoking_status))\ndat4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 7\n     id   sex   age address marrital_status occu_status pregnancy_status\n  <dbl> <dbl> <dbl>   <dbl>           <dbl>       <dbl>            <dbl>\n1     1     2     3      30               4           5                6\n```\n:::\n:::\n\n\n\n以上、select関数、慣れましたか？ここまでで、基本的な列の操作についての解説は終了です。次は行の操作にはいりたいのですが、そのまえに、基本事項を理解いただく必要がありますので、その解説をさせてください。\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}