{
  "hash": "ce8c07b7a883e9c630d9130d3d48f422",
  "result": {
    "markdown": "---\ntitle: 応用 全角から半角数字への変換\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvec <- c(\"１３４．５ｍｌ投与\",\"A薬５錠　分３\")\n```\n:::\n\n\n\n日本語のデータ分析を行う場合に、避けては通れないのが、全角の数字が出現している場合の問題です。\n\n正規表現は、数字はあたるはあたります\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_extract(vec,\"\\\\d+\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"１３４\" \"５\"    \n```\n:::\n:::\n\n\n\nまた、日本語も問題なく扱えます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_extract(vec,\"薬\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA   \"薬\"\n```\n:::\n\n```{.r .cell-code}\nvec\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"１３４．５ｍｌ投与\" \"A薬５錠　分３\"     \n```\n:::\n:::\n\n\n \nが、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_extract(vec,\"(\\\\d+\\\\.\\\\d+)(?=ｍｌ)\") #X\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA NA\n```\n:::\n:::\n\n\n\nこれは、「.」が、全角であるために拾えません。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_extract(vec,\"(\\\\d+．\\\\d+)(?=ｍｌ)\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"１３４．５\" NA          \n```\n:::\n:::\n\n\n\nまた、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas.numeric(\"５\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: NAs introduced by coercion\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n:::\n\n\n\nと文字列を数字に変更しようとしても、NAが帰ってくるため、全角の数字が出現している場合は半角に早期に戻しておくほうが無難です。\n\nパッケージを利用した方法等もいろいろありますがここでは自作関数を作成する方法を試してみましょう。\n\nstr_replace_allはnamed vectorという、名前付きベクトルを与えてあげると複数のパターンに対して置き換えを実施してくれます。\n\n例えば、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest1 <- c(\"aaa\" = \"bbb\", \"AAA\" = \"BBB\")\nstr_replace_all(\"aaa<<<>>>AAA\", test1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"bbb<<<>>>BBB\"\n```\n:::\n:::\n\n\n\nということで、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreplacer <- c(\n  \"１\" = \"1\",\n  \"２\" = \"2\",\n  \"３\" = \"3\",\n  \"４\" = \"4\",\n  \"５\" = \"5\",\n  \"６\" = \"6\",\n  \"７\" = \"7\",\n  \"８\" = \"8\",\n  \"９\" = \"9\",\n  \"０\" = \"0\"\n)\n\nvec <- c(\"１２３\",\"２３４\",\"５６７\",\"８９０\")\n\nstr_replace_all(vec,replacer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"123\" \"234\" \"567\" \"890\"\n```\n:::\n:::\n\n\n\nとこんな感じで全角を置き換えることができます。この置き換え、関数化しておくと、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnum_zen_to_han <- function(vec){\n  replacer <- c(\n    \"１\" = \"1\",\"２\" = \"2\",\"３\" = \"3\",\"４\" = \"4\",\n    \"５\" = \"5\",\"６\" = \"6\",\"７\" = \"7\",\"８\" = \"8\",\n    \"９\" = \"9\",\"０\" = \"0\", \"．\" = \".\"\n  ) \n  \n  return(str_replace_all(vec,replacer))\n} \n\ndat <- tibble(tgt = c(\"１２３\",\"３４６.７\",\"３４.５６３\"))\n\ndat %>% \n  mutate(han = num_zen_to_han(tgt))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 x 2\n  tgt         han   \n  <chr>       <chr> \n1 １２３      123   \n2 ３４６.７   346.7 \n3 ３４.５６３ 34.563\n```\n:::\n:::\n\n\n\nできました!必要に応じて、実施してみてください",
    "supporting": [
      "s05-044_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}