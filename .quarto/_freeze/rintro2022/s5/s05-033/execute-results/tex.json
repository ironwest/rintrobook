{
  "hash": "187298f9de077e4ebe43fdd4ef79284d",
  "result": {
    "markdown": "---\ntitle: 実践2 メタ文字\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvec <- c(\"1\",\"120\",\"34.3\",\"ab123\", \n         \"5b\",\"6 5\",\"7\",\"b\",\"ac4235432\",\n         \"45.3mg/dl\",\"abc500ml 3unit 3:40AM\",\n         \"^ is start.\",\n         \"this sign($) represents end.\", \"....\")\n\nvec\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"1\"                            \"120\"                         \n [3] \"34.3\"                         \"ab123\"                       \n [5] \"5b\"                           \"6 5\"                         \n [7] \"7\"                            \"b\"                           \n [9] \"ac4235432\"                    \"45.3mg/dl\"                   \n[11] \"abc500ml 3unit 3:40AM\"        \"^ is start.\"                 \n[13] \"this sign($) represents end.\" \"....\"                        \n```\n:::\n:::\n\n\n\nここでは、代表的な正規表現の記号を見ていきましょう。尚、\\\\d+のように、「まとめて指定」するために利用する\\や+のような文字をメタ文字と呼びます。この動画は代表的なメタ文字の解説です。\n\n数字にこだわらず「なんでもよい」場合は「.」で表現できます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(vec,\".\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] | <1>\n [2] | <1><2><0>\n [3] | <3><4><.><3>\n [4] | <a><b><1><2><3>\n [5] | <5><b>\n [6] | <6>< ><5>\n [7] | <7>\n [8] | <b>\n [9] | <a><c><4><2><3><5><4><3><2>\n[10] | <4><5><.><3><m><g></><d><l>\n[11] | <a><b><c><5><0><0><m><l>< ><3><u><n><i><t>< ><3><:><4><0><A><M>\n[12] | <^>< ><i><s>< ><s><t><a><r><t><.>\n[13] | <t><h><i><s>< ><s><i><g><n><(><$><)>< ><r><e><p><r><e><s><e><n><t><s>< ><e><n><d><.>\n[14] | <.><.><.><.>\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"....\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [3] | <34.3>\n [4] | <ab12>3\n [9] | <ac42><3543>2\n[10] | <45.3><mg/d>l\n[11] | <abc5><00ml>< 3un><it 3><:40A>M\n[12] | <^ is>< sta>rt.\n[13] | <this>< sig><n($)>< rep><rese><nts ><end.>\n[14] | <....>\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\".{4,5}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [3] | <34.3>\n [4] | <ab123>\n [9] | <ac423><5432>\n[10] | <45.3m><g/dl>\n[11] | <abc50><0ml 3><unit ><3:40A>M\n[12] | <^ is ><start>.\n[13] | <this ><sign(><$) re><prese><nts e>nd.\n[14] | <....>\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\".+\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] | <1>\n [2] | <120>\n [3] | <34.3>\n [4] | <ab123>\n [5] | <5b>\n [6] | <6 5>\n [7] | <7>\n [8] | <b>\n [9] | <ac4235432>\n[10] | <45.3mg/dl>\n[11] | <abc500ml 3unit 3:40AM>\n[12] | <^ is start.>\n[13] | <this sign($) represents end.>\n[14] | <....>\n```\n:::\n:::\n\n\n\nパターンの開始が文字列の先頭にあるかを^で調べることもきます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(vec,\"^b\")　#で先頭にbがあるか?\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[8] | <b>\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"^a\")　#で先頭にaがあるか?\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [4] | <a>b123\n [9] | <a>c4235432\n[11] | <a>bc500ml 3unit 3:40AM\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"^\\\\d\")　#で先頭が数字で始まっているか?\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] | <1>\n [2] | <1>20\n [3] | <3>4.3\n [5] | <5>b\n [6] | <6> 5\n [7] | <7>\n[10] | <4>5.3mg/dl\n```\n:::\n:::\n\n\n\n同様に最後は$です。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(vec,\"M$\")　#文字列の最後がMで終わっているか？\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[11] | abc500ml 3unit 3:40A<M>\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"\\\\d{3}$\")　#\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[2] | <120>\n[4] | ab<123>\n[9] | ac4235<432>\n```\n:::\n:::\n\n\n\n^と$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(vec,\"^b$\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[8] | <b>\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"^\\\\d+$\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] | <1>\n[2] | <120>\n[7] | <7>\n```\n:::\n:::\n\n\n\nところで、.とか^とか$とかを\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(vec,\"^\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] | <>1\n [2] | <>120\n [3] | <>34.3\n [4] | <>ab123\n [5] | <>5b\n [6] | <>6 5\n [7] | <>7\n [8] | <>b\n [9] | <>ac4235432\n[10] | <>45.3mg/dl\n[11] | <>abc500ml 3unit 3:40AM\n[12] | <>^ is start.\n[13] | <>this sign($) represents end.\n[14] | <>....\n```\n:::\n:::\n\n\n\nひっかけるにはどうしたらいいでしょうか？\n\n\\\\をつけることで、「これはメタ文字じゃなくて文字ですよ」とすることができます。この方法、\n\n「\\\\でエスケープする」と表現されることが多いです。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(vec,\"\\\\^\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[12] | <^> is start.\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"\\\\$\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[13] | this sign(<$>) represents end.\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"\\\\.+\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [3] | 34<.>3\n[10] | 45<.>3mg/dl\n[12] | ^ is start<.>\n[13] | this sign($) represents end<.>\n[14] | <....>\n```\n:::\n:::\n\n\n\nちゃんとひっかけられていますね?\n\nその他の書き方も解説しておきます\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view(vec,\"\\\\w+\") #すべての文字\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] | <1>\n [2] | <120>\n [3] | <34>.<3>\n [4] | <ab123>\n [5] | <5b>\n [6] | <6> <5>\n [7] | <7>\n [8] | <b>\n [9] | <ac4235432>\n[10] | <45>.<3mg>/<dl>\n[11] | <abc500ml> <3unit> <3>:<40AM>\n[12] | ^ <is> <start>.\n[13] | <this> <sign>($) <represents> <end>.\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"\\\\W+\") #すべての非文字\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [3] | 34<.>3\n [6] | 6< >5\n[10] | 45<.>3mg</>dl\n[11] | abc500ml< >3unit< >3<:>40AM\n[12] | <^ >is< >start<.>\n[13] | this< >sign<($) >represents< >end<.>\n[14] | <....>\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"\\\\d+\")　#すべての数字\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] | <1>\n [2] | <120>\n [3] | <34>.<3>\n [4] | ab<123>\n [5] | <5>b\n [6] | <6> <5>\n [7] | <7>\n [9] | ac<4235432>\n[10] | <45>.<3>mg/dl\n[11] | abc<500>ml <3>unit <3>:<40>AM\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"\\\\D+\") #すべての非数字\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [3] | 34<.>3\n [4] | <ab>123\n [5] | 5<b>\n [6] | 6< >5\n [8] | <b>\n [9] | <ac>4235432\n[10] | 45<.>3<mg/dl>\n[11] | <abc>500<ml >3<unit >3<:>40<AM>\n[12] | <^ is start.>\n[13] | <this sign($) represents end.>\n[14] | <....>\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"\\\\s+\") #スペース\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [6] | 6< >5\n[11] | abc500ml< >3unit< >3:40AM\n[12] | ^< >is< >start.\n[13] | this< >sign($)< >represents< >end.\n```\n:::\n\n```{.r .cell-code}\nstr_view(vec,\"\\\\S+\") #非スペース\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] | <1>\n [2] | <120>\n [3] | <34.3>\n [4] | <ab123>\n [5] | <5b>\n [6] | <6> <5>\n [7] | <7>\n [8] | <b>\n [9] | <ac4235432>\n[10] | <45.3mg/dl>\n[11] | <abc500ml> <3unit> <3:40AM>\n[12] | <^> <is> <start.>\n[13] | <this> <sign($)> <represents> <end.>\n[14] | <....>\n```\n:::\n:::\n\n\n\nもっと色々ありますので、深く知りたいという方はRStudioのHPにあるCheat Sheetをご確認ください。\n\n",
    "supporting": [
      "s05-033_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}