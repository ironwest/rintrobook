{
  "hash": "2e23e18248afe688b383efb0b7400c17",
  "result": {
    "markdown": "---\ntitle: テキストファイルのインポート(L49)\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\n\n\n長々とした解説、お疲れさまでした。\nここからは、解説でお伝えしたことを、実際のRで実行していってみましょう。\n\n今回対象とするファイルは\n\nimport_practice1.txt\nimport_practice2.txt\nimport_practice3.txt\n\nの3種類です。拡張子はヒントにならないようにあえて、txtのままにしてあります。\n\nまずは、この3つのファイルのデリミターを確認してみましょう\n\nimport_practice1.txt　 -> [ tab ]\nimport_practice2.txt　-> [ , ]\nimport_practice3.txt　-> [ ; ]\n\nこの3つです\n\n直接見る以外にも\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nread_file(\"import_practice1.txt\")\nread_file(\"import_practice2.txt\")\nread_file(\"import_practice3.txt\")\n```\n:::\n\n\n\nそれぞれ文字化けしているように見えますが、\n\nimport_practice1は \\t\nimport_practice1は ,\nimport_practice1は ;\n\nでそれぞれ区切られていることがわかります。\nまた、windowsでは、改行を表す記号が\\r\\nなので、その表示もされています。\n\nここで、デリミターがわかったのでそれぞれ読み込んでみましょうテキストファイルをデリミターを指定して読み込む関数は、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?readr::read_delim\n```\n:::\n\n\n\nです。Usageでデフォルトが設定されていないArgumentは\nfileとdelimの二種類です。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_delim(\"import_practice1.txt\", \"\\t\")\nread_delim(\"import_practice2.txt\", \",\" )\nread_delim(\"import_practice3.txt\", \";\" )\n```\n:::\n\n\n\nうまく読み込めていますね？\n内容はすべて同じです。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?readr::read_delim\n```\n:::\n\n\n\nただ、今回はデリミターがわからないファイルに対してデリミターを指定する必要があったため、read_delim関数を用いましたが、ヘルプのUsageをみると、read_delim以外に\n\nread_csv\nread_csv2\nread_tsv()\n\nの3つの関数の記載がされています。\n\nDescriptionをみると、 \n\n * read_csvは [,] をデリミターに\n * read_tsvは [\\t]をデリミターに\n * read_csv2は　[;]をデリミターに小数点を[,]に\n\nデフォルトが設定されたread_delim関数であることが記載されており、もともと、デリミターがわかっている場合は、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_tsv(\"import_practice1.txt\")\nread_csv(\"import_practice2.txt\")\nread_csv2(\"import_practice3.txt\")\n```\n:::\n\n\n\nこのように、delim Argumentを記載せずに読み込むことができました。\n\nどうでしょうか?\n\nread_delimとその仲間のread_csv,tsv,csv2関数をどのように利用するかイメージがつきましたでしょうか?\n\n次は今回読み込んだデータがRで保存されているtibble形式について説明しておきます。",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}