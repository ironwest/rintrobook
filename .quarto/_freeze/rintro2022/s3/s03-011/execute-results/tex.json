{
  "hash": "b9a61efe9e839a82cb319c4dff5e364f",
  "result": {
    "markdown": "---\ntitle: (さらに知りたい人へ)(L46)\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\n\n\n日本語の場合は、ほとんどの場合、\"cp932\"あるいは\"shift-jis\"\nという文字コードをlocaleで指定してあげれば問題ないと思いますが\n日本語以外、英語以外の外国語のファイルを読み込みたい場合に、\nどんな文字コードを指定すればよいかわからないことも多々あります\nその場合は、guess_encoding関数を利用してみましょう\n\n例えば、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_file(\"ichiji/tekitou2.txt\")\n```\n:::\n\n\n\n\n文字化けしている結果のときに、\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguess_encoding(\"ichiji/tekitou2.txt\")\n```\n:::\n\n\n\nある程度以上の長さのデータが含まれていると、どの文字コードかを推定して教えてくれますので、ここで指定されたものをとりあえず利用して読み込んでみてもよいかもしれません\n\n(今回はcp932のはずですが、Shift-jisと推定されています。この二つ、厳密には違いますがほとんど一緒なので読み込んでもエラーは起こらないですが、一部文字化けが残存する可能性もあります)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_file(\"ichiji/tekitou2.txt\",locale(encoding=\"shift-jis\"))\nread_file(\"ichiji/tekitou2.txt\",locale(encoding=\"cp932\"))\n```\n:::\n\n\n\nお疲れさまでした。以上で文字コードの話はおしまいです。\n\n次の動画からはファイルの形式について解説していきます。\n\n",
    "supporting": [
      "s03-011_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}