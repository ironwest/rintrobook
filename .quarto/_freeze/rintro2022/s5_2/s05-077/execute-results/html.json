{
  "hash": "70285e2da3a18585ed677fb3df759ad5",
  "result": {
    "markdown": "---\ntitle: 看護記録もどきの加工3\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\n```\nlibrary(tidyverse)\n\n{\n\n  kiroku  <- readxl::read_excel(\"data/看護記録もどき.xlsx\")\n  kiroku7 <- kiroku %>% \n    mutate(name = \n            if_else(\n              str_detect(`患者名`,\"^\\\\s\"), \n              NA_character_,\n              `患者名`)) %>%\n    fill(name) %>% \n    select(name, sokutei = `患者名`, everything()) %>% \n    mutate(sokutei = if_else(\n      str_detect(sokutei,\"^\\\\s\"),\n      sokutei, \"admission\"\n    )) %>% \n    mutate(sokutei = str_trim(sokutei)) %>% \n    pivot_longer(cols = !c(name,sokutei),\n                names_to = \"date\",\n                values_to = \"val\") %>%\n    filter(!is.na(val))\n\n  wide <- kiroku7 %>% \n    pivot_wider(\n      id_cols = c(name, date),\n      names_from = sokutei,\n      values_from = val\n    ) %>% \n    arrange(name, date)\n\n  wide2 <- wide %>% \n    rename(bp = `血圧`, pulse = `脈拍`, rr = `呼吸回数`, meal = `食事`)\n\n  \n}\n```\n\nまとめて処理をしていきましょう。、\n\n```\nwide3 <- wide2 %>% \n  #血圧\n  separate(bp,c(\"am\",\"pm\"),sep=\"-\") %>% \n  separate(am,c(\"am_sbp\",\"am_dbp\"), sep=\"/\") %>% \n  separate(pm,c(\"pm_sbp\",\"pm_dbp\"), sep=\"/\") %>%\n  mutate(\n    am_sbp = str_trim(am_sbp) %>% na_if(\"\"),\n    pm_sbp = na_if(pm_sbp,\"\"),\n  ) %>% \n  \n  #脈拍\n  separate(pulse,c(\"am_pulse\",\"pm_pulse\")) %>% \n  mutate(pm_pulse = na_if(pm_pulse,\"\")) %>% \n  \n  #呼吸回数\n  separate(rr,c(\"am_rr\",\"pm_rr\"),sep=\"-\") %>% \n  mutate(\n    am_rr = str_replace(am_rr,\"回\",\"\"),\n    pm_rr = \n      str_replace(pm_rr,\"回\",\"\") %>% \n      str_trim() %>% \n      na_if(\"\")\n  ) %>% \n\n  #食事\n  separate(meal, c(\"morning_meal\",\"lunch_meal\",\"dinner_meal\"),\n           sep=\"-\") %>% \n  mutate(\n    morning_meal = \n      str_remove(morning_meal,\"割\") %>% \n      str_trim() %>% \n      na_if(\"\")\n  ) %>% \n  mutate(\n    lunch_meal = str_remove(lunch_meal,\"割\") %>% \n      str_trim() %>% \n      na_if(\"\")\n  ) %>% \n  mutate(\n    dinner_meal = str_remove(dinner_meal,\"割\") %>% \n      str_trim() %>% \n      na_if(\"\")\n  )\n\nView(wide3)\n```\n\nこれで全部わけることができました。\n\nただし、amとpmがデータなので、これは縦にしておきましょう\n\n```\nlong <- wide3 %>% \n  pivot_longer(cols=!c(name,date,admission),\n               names_to = c(\"timing\",\"sokutei\"),\n               values_to = \"val\",\n               names_sep = \"_\") \n```\n\nvalの値、数値型にしておきましょうただし、\n\n```\nlong$val\nas.numeric(long$val)\n```\n\n何か、おかしい変換が起こっているみたいなので、\n\n```\nconvert <- long %>% \n  select(val) %>% \n  mutate(val2 = as.numeric(val)) \n\nng <- convert %>% filter(!is.na(val) & is.na(val2))\nng\n```\n\nvalは欠損していないのに、val2は欠損しているものを眺めると、こんな感じです。これだけだとなぜかわからないので、\n\n```\nng$val\n```\n\nこうすると、スペースが入っているように見えます。\n\n```\nlong %>% \n  select(val) %>% \n  mutate(val2 = str_trim(val) %>% as.numeric()) \n```\n\nstr_trimを変換前に挟むと警告はでてきませんでした\n\n```\nas.numeric(\"　16\") #全角スペース\n```\n\nが入っているとうまく変換できないみたいです。\n\nということで、\n\n```\nlong\n\nlong2 <- long %>% \n  mutate(val = str_trim(val) %>% as.numeric())\n\nlong2\n```\n\n後は、\n\n```\nwide <- long2 %>% \n  pivot_wider(\n    id_cols = c(name,date,admission, timing),\n    names_from = sokutei,\n    values_from = val\n  )\n\nView(wide)\n\nmeal_data <- wide %>% \n  select(name,date,admission,timing,meal) %>% \n  filter(!is.na(meal))\n\nsokutei_data <- wide %>% \n  select(name, date, admission, timing, sbp, \n         dbp, pulse, rr) %>% \n  filter( str_detect(timing, \"am|pm\"))\n```\n\nできました。\n\nとりあえず、こんな感じで加工できればセクション5の関数群は使いこなせていると思います！\n\nここまでで、こんなデータが、\n\n```\nView(kiroku)\n```\n\nこうなりました!\n\n```\nView(sokutei_data)\nView(meal_data)\n```\n\nいかがでしょうか?\n\n次は実際の厚生労働省のデータを加工してみましょう。\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}