{
  "hash": "de560349c88466891b768de906142c4c",
  "result": {
    "markdown": "---\ntitle: 食中毒データの加工1\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n```\n:::\n\n\n\nここでは、data/food_poisoning2020.xlsの、④病因物質別発生状況\n\nシートからデータをインポートしてtidyデータにしていきます。\n\nもし可能そうであれば一度解説を見る前に取り組んでみてください。なお、総数等の集計されたデータはすべて破棄する形で進めましょう。\n\nそれではいきます!\n\nまずはデータを眺めてみます。\n\n3-36行目に1-6月のデータ(A3:W36)\n\n39-72行目に7-12月のデータ(A39:T72)\n\nが含まれています。\n\nread_excel関数のヘルプファイルを見ると、rangeアーギュメントがあり、範囲指定でデータを取得することができます。\n\nなので、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_a <- read_excel(\"data/food_poisoning2020.xls\",\n                    range = \"A3:W36\",\n                    col_names = FALSE,\n                    sheet=\"④病因物質別発生状況\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n* `` -> `...1`\n* `` -> `...2`\n* `` -> `...3`\n* `` -> `...4`\n* `` -> `...5`\n* `` -> `...6`\n* `` -> `...7`\n* `` -> `...8`\n* `` -> `...9`\n* `` -> `...10`\n* `` -> `...11`\n* `` -> `...12`\n* `` -> `...13`\n* `` -> `...14`\n* `` -> `...15`\n* `` -> `...16`\n* `` -> `...17`\n* `` -> `...18`\n* `` -> `...19`\n* `` -> `...20`\n* `` -> `...21`\n* `` -> `...22`\n* `` -> `...23`\n```\n:::\n\n```{.r .cell-code}\ndat_b <- read_excel(\"data/food_poisoning2020.xls\",\n                    range = \"A39:T72\",\n                    col_names = FALSE,\n                    sheet=\"④病因物質別発生状況\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n* `` -> `...1`\n* `` -> `...2`\n* `` -> `...3`\n* `` -> `...4`\n* `` -> `...5`\n* `` -> `...6`\n* `` -> `...7`\n* `` -> `...8`\n* `` -> `...9`\n* `` -> `...10`\n* `` -> `...11`\n* `` -> `...12`\n* `` -> `...13`\n* `` -> `...14`\n* `` -> `...15`\n* `` -> `...16`\n* `` -> `...17`\n* `` -> `...18`\n* `` -> `...19`\n* `` -> `...20`\n```\n:::\n\n```{.r .cell-code}\nView(dat_a)\nView(dat_b)\n```\n:::\n\n\n\nまずdat_aから処理しましょう。\n\n1行目と2行目に列名となりうる行です。\n\n人口動態データの処理にならって列名を作成しましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrow1 <- dat_a %>% slice(1) %>% as_vector()\nrow2 <- dat_a %>% slice(2) %>% as_vector()\n\ncol_a <- tibble(r1 = row1, r2 = row2) %>% \n  fill(r1, r2) %>% \n  replace_na(list(r2=\"\")) %>% \n  unite(\"col_a\",r1, r2, sep=\"_\")\n```\n:::\n\n\n\nここでcol_aの列名が1行目と2行目で同じ値です。\n\nデータを確認すると、1行目と2行目はそれぞれ、分類1、分類2という形で分かれているとみなせるので、それを反映しておきましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol_a$col_a[1] <- \"cause_1\"\ncol_a$col_a[2] <- \"cause_2\"\n\ncol_a\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23 x 1\n   col_a    \n   <chr>    \n 1 cause_1  \n 2 cause_2  \n 3 総数_事件\n 4 総数_患者\n 5 総数_死者\n 6 1月_事件 \n 7 1月_患者 \n 8 1月_死者 \n 9 2月_事件 \n10 2月_患者 \n# i 13 more rows\n```\n:::\n\n```{.r .cell-code}\ndat_a2 <- dat_a %>% \n  setNames(col_a$col_a) %>% \n  slice(-c(1:2))\n\nView(dat_a2)\n```\n:::\n\n\n\ncause_1をまずは埋めましょう。ついで、総数を表すことになるので、cause_2が欠損している行は削除します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_a3 <- dat_a2 %>% \n  fill(cause_1) %>% \n  filter(!is.na(cause_2))\n```\n:::\n\n\n\n縦持ちに変換します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_a4 <- dat_a3 %>% \n  pivot_longer(\n    cols = !c(cause_1, cause_2),\n    names_to = c(\"month\",\"type\"),\n    values_to = \"val\",\n    names_sep = \"_\"\n  )\n\nView(dat_a4)\n```\n:::\n\n\n\n総数を削除します\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_a5 <- dat_a4 %>% \n  filter(month != \"総数\")\n\nView(dat_a5)\n```\n:::\n\n\n\n縦持ちデータに変換できました!\n\nここで、同じ変換を\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_b\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 34 x 20\n   ...1  ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9  ...10 ...11 ...12 ...13\n   <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr>\n 1 病因~ <NA>  7月   <NA>  <NA>  8月   <NA>  <NA>  9月   <NA>  <NA>  10月  <NA> \n 2 <NA>  <NA>  事件  患者  死者  事件  患者  死者  事件  患者  死者  事件  患者 \n 3 総　~ <NA>  76    492   -     72    3145  1     77    720   -     123   839  \n 4 細　~ <NA>  34    434   -     42    3103  -     37    570   -     42    618  \n 5 <NA>  サ　~ 4     92    -     7     137   -     5     154   -     5     116  \n 6 <NA>  ぶ　~ 5     71    -     6     37    -     3     46    -     1     21   \n 7 <NA>  ボ　~ -     -     -     -     -     -     -     -     -     -     -    \n 8 <NA>  腸　~ -     -     -     1     3     -     -     -     -     -     -    \n 9 <NA>  腸管~ 1     10    -     2     4     -     -     -     -     1     3    \n10 <NA>  その~ 1     118   -     2     2811  -     1     19    -     -     -    \n# i 24 more rows\n# i 7 more variables: ...14 <chr>, ...15 <chr>, ...16 <chr>, ...17 <chr>,\n#   ...18 <chr>, ...19 <chr>, ...20 <chr>\n```\n:::\n:::\n\n\n\nにも適応しましょう。\n\n練習がてら、dat_bにも適応してみてください。\n\ndat_aの処理は、中間の変数を削除して記載すると、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrow1 <- dat_a %>% slice(1) %>% as_vector()\nrow2 <- dat_a %>% slice(2) %>% as_vector()\n\ncol_a <- tibble(r1 = row1, r2 = row2) %>% \n  fill(r1, r2) %>% \n  replace_na(list(r2=\"\")) %>% \n  unite(\"col_a\",r1, r2, sep=\"_\")\n\ncol_a$col_a[1] <- \"cause_1\"\ncol_a$col_a[2] <- \"cause_2\"\n\ndat_a2 <- dat_a %>% \n  setNames(col_a$col_a) %>% \n  slice(-c(1:2)) %>% \n  fill(cause_1) %>% \n  filter(!is.na(cause_2)) %>% \n  pivot_longer(\n    cols = !c(cause_1, cause_2),\n    names_to = c(\"month\",\"type\"),\n    values_to = \"val\",\n    names_sep = \"_\"\n  ) %>% \n  filter(month != \"総数\")\n```\n:::\n\n\n\nこんな感じです。\n\nこれを参考にして、dat_bに適応すると、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrow1 <- dat_b %>% slice(1) %>% as_vector()\nrow2 <- dat_b %>% slice(2) %>% as_vector()\n\ncol_b <- tibble(r1 = row1, r2 = row2) %>% \n  fill(r1, r2) %>% \n  replace_na(list(r2=\"\")) %>% \n  unite(\"col_b\",r1, r2, sep=\"_\")\n\ncol_b$col_b[1] <- \"cause_1\"\ncol_b$col_b[2] <- \"cause_2\"\n\ndat_b2 <- dat_b %>% \n  setNames(col_b$col_b) %>% \n  slice(-c(1:2)) %>% \n  fill(cause_1) %>% \n  filter(!is.na(cause_2)) %>% \n  pivot_longer(\n    cols = !c(cause_1, cause_2),\n    names_to = c(\"month\",\"type\"),\n    values_to = \"val\",\n    names_sep = \"_\"\n  ) %>% \n  filter(month != \"総数\")\n\ndat_a2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 432 x 5\n   cause_1                                cause_2             month type  val  \n   <chr>                                  <chr>               <chr> <chr> <chr>\n 1 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 1月   事件  1    \n 2 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 1月   患者  95   \n 3 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 1月   死者  -    \n 4 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 2月   事件  -    \n 5 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 2月   患者  -    \n 6 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 2月   死者  -    \n 7 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 3月   事件  -    \n 8 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 3月   患者  -    \n 9 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 3月   死者  -    \n10 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 4月   事件  -    \n# i 422 more rows\n```\n:::\n\n```{.r .cell-code}\ndat_b2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 432 x 5\n   cause_1                                cause_2             month type  val  \n   <chr>                                  <chr>               <chr> <chr> <chr>\n 1 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 7月   事件  4    \n 2 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 7月   患者  92   \n 3 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 7月   死者  -    \n 4 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 8月   事件  7    \n 5 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 8月   患者  137  \n 6 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 8月   死者  -    \n 7 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 9月   事件  5    \n 8 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 9月   患者  154  \n 9 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 9月   死者  -    \n10 細　　　　　　　　　　　　　　　　　菌 サ　ル　モ　ネ　ラ~ 10月  事件  5    \n# i 422 more rows\n```\n:::\n:::\n\n\n\nできあがりました。\n次の動画でデータを結合しましょう。\n\n",
    "supporting": [
      "s05-081_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}