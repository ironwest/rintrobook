{
  "hash": "08bdac043da923d5bf7f9c4e27f760d5",
  "result": {
    "markdown": "---\ntitle: 食中毒データの加工2\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n\ndat_a <- read_excel(\"data/food_poisoning2020.xls\",\n                    range = \"A3:W36\",\n                    col_names = FALSE,\n                    sheet=\"④病因物質別発生状況\")\n\ndat_b <- read_excel(\"data/food_poisoning2020.xls\",\n                    range = \"A39:T72\",\n                    col_names = FALSE,\n                    sheet=\"④病因物質別発生状況\")\n\nrow1 <- dat_a %>% slice(1) %>% as_vector()\nrow2 <- dat_a %>% slice(2) %>% as_vector()\n\ncol_a <- tibble(r1 = row1, r2 = row2) %>% \n  fill(r1, r2) %>% \n  replace_na(list(r2=\"\")) %>% \n  unite(\"col_a\",r1, r2, sep=\"_\")\n\ncol_a$col_a[1] <- \"cause_1\"\ncol_a$col_a[2] <- \"cause_2\"\n\ndat_a2 <- dat_a %>% \n  setNames(col_a$col_a) %>% \n  slice(-c(1:2)) %>% \n  fill(cause_1) %>% \n  filter(!is.na(cause_2)) %>% \n  pivot_longer(\n    cols = !c(cause_1, cause_2),\n    names_to = c(\"month\",\"type\"),\n    values_to = \"val\",\n    names_sep = \"_\"\n  ) %>% \n  filter(month != \"総数\")\n\nrow1 <- dat_b %>% slice(1) %>% as_vector()\nrow2 <- dat_b %>% slice(2) %>% as_vector()\n\ncol_b <- tibble(r1 = row1, r2 = row2) %>% \n  fill(r1, r2) %>% \n  replace_na(list(r2=\"\")) %>% \n  unite(\"col_b\",r1, r2, sep=\"_\")\n\ncol_b$col_b[1] <- \"cause_1\"\ncol_b$col_b[2] <- \"cause_2\"\n\ndat_b2 <- dat_b %>% \n  setNames(col_b$col_b) %>% \n  slice(-c(1:2)) %>% \n  fill(cause_1) %>% \n  filter(!is.na(cause_2)) %>% \n  pivot_longer(\n    cols = !c(cause_1, cause_2),\n    names_to = c(\"month\",\"type\"),\n    values_to = \"val\",\n    names_sep = \"_\"\n  ) %>% \n  filter(month != \"総数\")\n```\n:::\n\n\n\nひとつ前の動画で作成した二つのデータ、結合しましょう。\n\nここでの結合は二つのデータの列同士を結合するやり方になり、join系の関数を利用しません。\n\njoin系の関数は、\n\nA  <- A\nB  <- B\nC  <- C\n\nこうですが、\n \nここで行いたい結合は、\n\nA\nB\nC\nA\nB\nC\n \nという縦方向の結合です。この結合を行うのは、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest1 <- tibble(A = c(1:3), B = c(11:13))\ntest2 <- tibble(A = c(4:6), B = c(14:16))\n\ntest1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n      A     B\n  <int> <int>\n1     1    11\n2     2    12\n3     3    13\n```\n:::\n\n```{.r .cell-code}\ntest2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n      A     B\n  <int> <int>\n1     4    14\n2     5    15\n3     6    16\n```\n:::\n\n```{.r .cell-code}\nbind_rows(test1, test2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n      A     B\n  <int> <int>\n1     1    11\n2     2    12\n3     3    13\n4     4    14\n5     5    15\n6     6    16\n```\n:::\n:::\n\n\n\nこの、bind_rows関数です。\n\nということで、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_fin <- bind_rows(dat_a2, dat_b2)\n\nView(dat_fin)\n```\n:::\n\n\n\nくっつきました。\n\n後は、cause_1とcause_2の余分な空白、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_fin$cause_1 %>% unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"細　　　　　　　　　　　　　　　　　菌\" \n[2] \"ウ　　　　　イ　　　　　ル　　　　　ス\" \n[3] \"寄　　　　　　　   生  　　　　　　　虫\"\n[4] \"自　　　　　　　   然  　　　　　　　毒\"\n```\n:::\n\n```{.r .cell-code}\ndat_fin$cause_2 %>% unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"サ　ル　モ　ネ　ラ　属　菌\"         \"ぶ　　ど　　う　　球　　菌\"        \n [3] \"ボ　ツ　リ　ヌ　ス　菌\"             \"腸　炎　ビ　ブ　リ　オ\"            \n [5] \"腸管出血性大腸菌（ＶＴ産生）\"       \"その他の病原大腸菌\"                \n [7] \"ウ　エ　ル　シ　ュ　菌\"             \"セ　　レ　　ウ　　ス　　菌\"        \n [9] \"エルシニア・エンテロコリチカ\"       \"カンピロバクター・ジェジュニ／コリ\"\n[11] \"ナ　グ　ビ　ブ　リ　オ\"             \"コ　　レ　　ラ　　菌\"              \n[13] \"赤　　　　痢　　　　菌\"             \"チ　　フ　　ス　　菌\"              \n[15] \"パ ラ チ フ ス Ａ 菌\"               \"そ の 他 の 細 菌\"                 \n[17] \"ノ　ロ　ウ　イ　ル　ス\"             \"その他のウイルス\"                  \n[19] \"ク　　　ド　　　ア\"                 \"サルコシスティス\"                  \n[21] \"ア　ニ　サ　キ　ス\"                 \"その他の寄生虫\"                    \n[23] \"植　物　性　自　然　毒\"             \"動　物　性　自　然　毒\"            \n```\n:::\n:::\n\n\n\nを削除しておきましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_view_all( unique(dat_fin$cause_1), \"　\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `str_view()` was deprecated in stringr 1.5.0.\nℹ Please use `str_view_all()` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] │ 細<{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}>菌\n[2] │ ウ<{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}>イ<{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}>ル<{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}>ス\n[3] │ 寄<{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}>   生  <{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}>虫\n[4] │ 自<{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}>   然  <{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}>毒\n```\n:::\n\n```{.r .cell-code}\nstr_view_all( unique(dat_fin$cause_2), \"　\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] │ サ<{\\u3000}>ル<{\\u3000}>モ<{\\u3000}>ネ<{\\u3000}>ラ<{\\u3000}>属<{\\u3000}>菌\n [2] │ ぶ<{\\u3000}><{\\u3000}>ど<{\\u3000}><{\\u3000}>う<{\\u3000}><{\\u3000}>球<{\\u3000}><{\\u3000}>菌\n [3] │ ボ<{\\u3000}>ツ<{\\u3000}>リ<{\\u3000}>ヌ<{\\u3000}>ス<{\\u3000}>菌\n [4] │ 腸<{\\u3000}>炎<{\\u3000}>ビ<{\\u3000}>ブ<{\\u3000}>リ<{\\u3000}>オ\n [5] │ 腸管出血性大腸菌（ＶＴ産生）\n [6] │ その他の病原大腸菌\n [7] │ ウ<{\\u3000}>エ<{\\u3000}>ル<{\\u3000}>シ<{\\u3000}>ュ<{\\u3000}>菌\n [8] │ セ<{\\u3000}><{\\u3000}>レ<{\\u3000}><{\\u3000}>ウ<{\\u3000}><{\\u3000}>ス<{\\u3000}><{\\u3000}>菌\n [9] │ エルシニア・エンテロコリチカ\n[10] │ カンピロバクター・ジェジュニ／コリ\n[11] │ ナ<{\\u3000}>グ<{\\u3000}>ビ<{\\u3000}>ブ<{\\u3000}>リ<{\\u3000}>オ\n[12] │ コ<{\\u3000}><{\\u3000}>レ<{\\u3000}><{\\u3000}>ラ<{\\u3000}><{\\u3000}>菌\n[13] │ 赤<{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}>痢<{\\u3000}><{\\u3000}><{\\u3000}><{\\u3000}>菌\n[14] │ チ<{\\u3000}><{\\u3000}>フ<{\\u3000}><{\\u3000}>ス<{\\u3000}><{\\u3000}>菌\n[15] │ パ ラ チ フ ス Ａ 菌\n[16] │ そ の 他 の 細 菌\n[17] │ ノ<{\\u3000}>ロ<{\\u3000}>ウ<{\\u3000}>イ<{\\u3000}>ル<{\\u3000}>ス\n[18] │ その他のウイルス\n[19] │ ク<{\\u3000}><{\\u3000}><{\\u3000}>ド<{\\u3000}><{\\u3000}><{\\u3000}>ア\n[20] │ サルコシスティス\n... and 4 more\n```\n:::\n\n```{.r .cell-code}\ndat_fin <- dat_fin %>% \n  mutate(\n    cause_1 = str_remove_all(cause_1,\"　\"),\n    cause_2 = str_remove_all(cause_2,\"　\")\n  )\n```\n:::\n\n\n\nまた、valは、「-」が欠損値として利用されているので置き換えておきましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_fin <- dat_fin %>% \n  mutate(val = na_if(val,\"-\")) %>% \n  mutate(val = as.numeric(val))\n\nView(dat_fin)\n```\n:::\n\n\n\n以上！キレイな形になりました。\n\nグラフ化してみましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngdat <- dat_fin %>% \n  filter(cause_2 == \"ノロウイルス\") \n\nggplot(gdat) + \n  geom_col(aes(x = month, y = val)) +\n  facet_wrap(~type)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 18 rows containing missing values (`position_stack()`).\n```\n:::\n\n::: {.cell-output-display}\n![](s05-082_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\nmonthの並びが10月、11月、12月、1月と並んでいるのでここの並びを整えましょう。\n\n因子型にすると並びを調整することが可能です。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmonth_label <- c(\"1月\",\"2月\",\"3月\",\"4月\",\"5月\",\"6月\",\n                 \"7月\",\"8月\",\"9月\",\"10月\",\"11月\",\"12月\")\n\ndat_fin <- dat_fin %>% \n  mutate(month = factor(month,\n                        levels=month_label,\n                        labels=month_label))\n\ngdat <- dat_fin %>% \n  filter(cause_2 == \"ノロウイルス\") \n\nggplot(gdat) + \n  geom_col(aes(x = month, y = val)) +\n  facet_wrap(~type)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 18 rows containing missing values (`position_stack()`).\n```\n:::\n\n::: {.cell-output-display}\n![](s05-082_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nうまくならびましたね！\n\n以上、実際のデータをインポート、加工してグラフ化する一連の流れをみてみました。\n\n解説しながらなので、スクリプト量が多く感じるかもしれませんが、後から解説する「関数化」を利用すれば、同じ形のデータを1行で処理できたりするので、引き続きお付き合いください。\n\nおつかれさまでした。\n\nここまでの加工ができるようになれば、思いどおりにデータの形を変形することができるようになっているはずです。データのインポート、可視化、データ加工の3つの手順をストレスなくできるようになれば、あなたが行いたいデータ分析はほぼ8割が終了しているという格言もあったりします。\n\n残りのセクションで、\n　\n* データの集計を行う方法\n* 分析結果を共有するときに有用なレポート作成\n\nの知識をお伝えいたします。\n",
    "supporting": [
      "s05-082_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}