{
  "hash": "7aa5023f08d655f92894a0fc4c967a88",
  "result": {
    "markdown": "---\ntitle: Openxlsx:Excelへの出力3\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\nおまけです。\n\n実は、openxlsxには、データをエクセルファイルに簡単に書き出せる関数が用意されています。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\ndat <- tibble(a = 1:10, b = 11:20)\n\nopenxlsx::write.xlsx(dat,\"easy.xlsx\")\n```\n:::\n\n\n\neasy.xlsxという名前でファイルが作成されて、datの内容が含まれていますね？\n\n以上、駆け足でしたがレポートの作成方法についてでした。\n\nここまで学んだ知識を駆使して、本コースの最終課題として、実際の状況を想定して、レポートを作成する行程を一緒にやっていきましょう。\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}