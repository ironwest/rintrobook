{
  "hash": "02675365ab33271f05b90e3d621e8bb1",
  "result": {
    "markdown": "---\ntitle: チャンクオプションの解説\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n \nここでは、チャンクオプションと呼ばれる、Rのスクリプトの実行結果に色々と影響を及ぼす設定について解説していきます\n \n```{filename=\"example3.Rmd\"}\n---\ntitle: \"Example\"\nauthor: \"Nishida Norimitsu\"\ndate: \"2021/5/20\"\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n## チャンクオプション\n\nさて、ここからはチャンクオプションについて話をすすめていきます。\n\nRのコードチャンクの素の状態は次のような形です。\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n:::\n\nここに、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n:::\n\n\n\nのように、チャンクに名前(label)をつけることが可能です。\n\n名前をつけておくと、Knitをした場合にどこの処理をしているか、表示してくれるので便利です。ただし、名前が重複すると、エラーになるので注意してください。また、この名前はKnit後の文書には表示されません。\n\nlabelの他にも、「設定=」という形で次のように記載すると、そのチャンクの挙動を色々とコントロールできます。この設定のことを、チャンクオプションといいます。\n\nここでは、代表的なチャンクオプションをいくつかご紹介しましょう。\n\n### echo\n\nechoは、RのスクリプトをKnit後のファイルに表示するか表示しないかを決定します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#スクリプトのはじまり。\nprint(\"echo=TRUE のチャンクで実行\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"echo=TRUE のチャンクで実行\"\n```\n:::\n\n```{.r .cell-code}\n#スクリプトの終わり\n```\n:::\n\n\n\n上のように、`echo=TRUE`としている場合は、スクリプトが表示されていますが、\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"echo=FALSE のチャンクで実行\"\n```\n:::\n:::\n\n\n\n`echo=FALSE`とすると、表示されていません。\n\n## message\n\nmessageは、Rのスクリプトで色々と表示されるメッセ-ジを抑制するかどうかを設定できます。\n\nまずは、`message=FALSE`の場合は\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"message=FALSEのチャンクで実行\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"message=FALSEのチャンクで実行\"\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\nggplot() + \n  geom_histogram(aes(x = c(1:100)))\n```\n\n::: {.cell-output-display}\n![](s07-006_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nこんな感じです。\n次に、`message=TRUE`だとこんな感じです。\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"message=TRUEのチャンクで実行\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"message=TRUEのチャンクで実行\"\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\nggplot() + \n  geom_histogram(aes(x = c(1:100)))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](s07-006_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n`message=TRUE`だと、\n\n>`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\nというggplotでヒストグラムを描画するときのメッセージが表示されていますが、FALSEにするとそれが表示されません。\n\n## warning\n\nRのコンソールに表示される文字は、messageの他にも、警告（warning)もあります。warningシャンクオプションは、この警告も消すことが可能です。\n\n`warning=FALSE`の場合は、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas.numeric(c(1,\"a\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  1 NA\n```\n:::\n:::\n\n\n\nで、TRUEとすると、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas.numeric(c(1,\"a\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: NAs introduced by coercion\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  1 NA\n```\n:::\n:::\n\n\n\nとなります。\nこれらのチャンクオプションは組み合わせること\nも可能です。\n\n\n#### echo=TRUE, warning=TRUE, message=TRUE\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"echo=TRUE warning=TRUE, message=TRUE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"echo=TRUE warning=TRUE, message=TRUE\"\n```\n:::\n\n```{.r .cell-code}\nas.numeric(c(\"a\",\"1\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: NAs introduced by coercion\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA  1\n```\n:::\n\n```{.r .cell-code}\nggplot()+geom_histogram(aes(x=1:100))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](s07-006_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n#### echo=FALSE, warning=TRUE, message=TRUE\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"echo=FALSE warning=TRUE, message=TRUE\"\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: NAs introduced by coercion\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA  1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](s07-006_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n#### echo=TRUE, warning=FALSE, message=FALSE\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"echo=TRUE warning=FALSE, message=FALSE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"echo=TRUE warning=FALSE, message=FALSE\"\n```\n:::\n\n```{.r .cell-code}\nas.numeric(c(\"a\",\"1\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA  1\n```\n:::\n\n```{.r .cell-code}\nggplot()+geom_histogram(aes(x=1:100))\n```\n\n::: {.cell-output-display}\n![](s07-006_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n#### echo=FALSE, warning=FALSE, message=FALSE\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"echo=FALSE warning=FALSE, message=FALSE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"echo=FALSE warning=FALSE, message=FALSE\"\n```\n:::\n\n```{.r .cell-code}\nas.numeric(c(\"a\",\"1\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA  1\n```\n:::\n\n```{.r .cell-code}\nggplot()+geom_histogram(aes(x=1:100))\n```\n\n::: {.cell-output-display}\n![](s07-006_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n以上、チャンクオプションの設定についてでした。ちなみに、ここまで手入力前提で解説してきましたが、実は右上のところにボタンポチポチクリックすると調整できるメニューがあったりしますので、慣れないうちはこっちを利用することをおすすめします。\n```",
    "supporting": [
      "s07-006_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}