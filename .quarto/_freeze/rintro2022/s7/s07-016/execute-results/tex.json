{
  "hash": "d4fb8f2f4f1365bcf47bcec5d14a3320",
  "result": {
    "markdown": "---\ntitle: Rmarkdownでレポートを作成してみる―課題1\npage-layout: full\ntitle-block-banner: true\ncomments: false\n---\n\n\n\n課題1:\n\nkadai/dataフォルダに含まれる、data.csvファイルにはある会社の健康診断の（架空の）データが含まれています。この架空データ、列が６個あり、\n 　\n* wpid: 職場ID\n* id  :個人のID\n* yr  :健康診断の年度\n* bmi :BMI\n* sbp :収縮期血圧\n* dbp :拡張期血圧\n\nです。ここで、個人を特定するにはwpidとidを組み合わせて行う形なっています。なので、id=1の人はwpid毎に一人ずついるので注意してください。\n 　\nこのデータを利用して、Rmrkdownを書いて、会社全体のレポートを上司に向けて作成してみてください。レポートの内容は、上司はパワーポイントでの発表を好むので、\n 　\n* スライド1：タイトル\n* スライド2：全体を集計した表\n* スライド3~：職場別に集計した表\n\nとしましょう。どのような集計方法とするかは、皆さんにお任せします。なお、会社の標準的なプレゼン資料のテンプレートは、kadai/bunseki_co_template.pptxの内容であるので、それを反映してください。\n\nそれでははじめていきましょう。\n\nまずは、実際にRMarkdownを書く前にどんな表とグラフを表示するか、をここで考えておきます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.2     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.2     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\ndat <- read_csv(\"kadai/data/data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 2460 Columns: 6\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\ndbl (6): wpid, id, yr, bmi, sbp, dbp\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n\n全体を集計した表:\n\ntidyverseだけを利用するなら、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhyou1tidyv <- dat %>% \n  group_by(yr) %>% \n  summarise(\n    across(c(bmi,sbp,dbp),\n           .fn = list(mn = ~{mean(.)},\n                      q25 = ~{quantile(.,0.25)},\n                      q75 = ~{quantile(.,0.75)}),\n           .names = \"{.col}_{.fn}\")\n  ) %>% \n  mutate(across(!yr, ~{signif(.,3)})) %>% \n  mutate(\n    bmi_res = str_glue(\"{bmi_mn}({bmi_q25}-{bmi_q75})\"),\n    sbp_res = str_glue(\"{sbp_mn}({sbp_q25}-{sbp_q75})\"),\n    dbp_res = str_glue(\"{dbp_mn}({dbp_q25}-{dbp_q75})\")\n  ) %>% \n  select(`年度`=yr,\n         `BMI` = bmi_res,\n         `収縮期血圧` = sbp_res,\n         `拡張期血圧` = dbp_res)\n```\n:::\n\n\n\nこんな感じで表を作成してあげます。\n\nacross等を駆使して短めに書いてはいますが、ちょっと面倒です\n\nここで利用している、\n　\n* signifはという有効数字に丸める関数です。\n* str_glueは\"{列名}\"とすると、その部分を置き換えた文字に置き換えてくれる便利な関数です。\n\nちょっと難しいかもしれません\n\nただ、とりあえず、このような形の表を作成できれば、knitr::kableという関数に与えてあげると、自動的にmarkdown形式に変換してくれます。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhyou1tidyv\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 x 4\n   年度 BMI             収縮期血圧    拡張期血圧     \n  <dbl> <glue>          <glue>        <glue>         \n1  2000 22.4(21.3-23.5) 106(82.1-140) 48.4(24-81.7)  \n2  2001 22.4(21.3-23.5) 106(82.1-140) 48.4(24-81.6)  \n3  2002 22.4(21.3-23.4) 106(82-140)   48.3(23.9-81.9)\n```\n:::\n\n```{.r .cell-code}\nknitr::kable(hyou1tidyv)  \n```\n\n::: {.cell-output-display}\n| 年度|BMI             |収縮期血圧    |拡張期血圧      |\n|----:|:---------------|:-------------|:---------------|\n| 2000|22.4(21.3-23.5) |106(82.1-140) |48.4(24-81.7)   |\n| 2001|22.4(21.3-23.5) |106(82.1-140) |48.4(24-81.6)   |\n| 2002|22.4(21.3-23.4) |106(82-140)   |48.3(23.9-81.9) |\n:::\n:::\n\n\n\nこれを利用してもよいですし、\n\n\ngtsummaryというパッケージを利用するともっと簡単に集計表を作成できて、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl <- gtsummary::tbl_summary(dat,by=\"yr\",include = c(\"bmi\",\"sbp\",\"dbp\"))\ntbl\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nTable printed with `knitr::kable()`, not {gt}. Learn why at\nhttps://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html\nTo suppress this message, include `message = FALSE` in code chunk header.\n```\n:::\n\n::: {.cell-output-display}\n|**Characteristic** |  **2000**, N = 820   |  **2001**, N = 820   |  **2002**, N = 820   |\n|:------------------|:--------------------:|:--------------------:|:--------------------:|\n|bmi                | 22.34 (21.33, 23.52) | 22.35 (21.29, 23.51) | 22.42 (21.28, 23.40) |\n|sbp                |     92 (82, 140)     |     92 (82, 140)     |     92 (82, 140)     |\n|dbp                |     34 (24, 82)      |     34 (24, 82)      |     33 (24, 82)      |\n:::\n:::\n\n\n\nこんな感じです。英語表記なので、日本語に直す手間は少しかかりますが、こちらの方が、処理の内容としてはだいぶ楽だと思います。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gtsummary)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'gtsummary' was built under R version 4.3.2\n```\n:::\n\n```{.r .cell-code}\ntbl2 <- tbl_summary(\n  data = dat,\n  by=\"yr\",\n  include = c(\"bmi\",\"sbp\",\"dbp\"),\n  label = list(bmi ~ \"BMI\", \n               sbp ~ \"収縮期血圧\",\n               dbp ~ \"拡張期血圧\") \n) %>% \n  modify_header(list(label~\"**検査値**\")) %>%  \n  　　　# 検査値を足しています\n  \n  modify_spanning_header( #この関数で「年度」を足しています\n    list(\n      stat_1 ~ \"**年度**\",\n      stat_2 ~ \"**年度**\",\n      stat_3 ~ \"**年度**\"\n    )\n  ) %>% \n  \n  modify_footnote( # この関数でフットノートを日本語にしています\n    list(\n      stat_1 ~ \"中央値(IQR)\",\n      stat_2 ~ \"中央値(IQR)\",\n      stat_3 ~ \"中央値(IQR)\"\n    )\n  )\n\ntbl2\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nTable printed with `knitr::kable()`, not {gt}. Learn why at\nhttps://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html\nTo suppress this message, include `message = FALSE` in code chunk header.\n```\n:::\n\n::: {.cell-output-display}\n|**検査値** |  **2000**, N = 820   |  **2001**, N = 820   |  **2002**, N = 820   |\n|:----------|:--------------------:|:--------------------:|:--------------------:|\n|BMI        | 22.34 (21.33, 23.52) | 22.35 (21.29, 23.51) | 22.42 (21.28, 23.40) |\n|収縮期血圧 |     92 (82, 140)     |     92 (82, 140)     |     92 (82, 140)     |\n|拡張期血圧 |     34 (24, 82)      |     34 (24, 82)      |     33 (24, 82)      |\n:::\n:::\n\n\n\nmodify~という関数で設定を色々変えています。\n\nstat_1など、表の列名をしらべるには、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngtsummary::show_header_names(tbl)\n```\n\n\n::: {.cell-output .cell-output-stderr}\n```\ni As a usage guide, the code below re-creates the current column headers.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nmodify_header(\n  label = \"**Characteristic**\",\n  stat_1 = \"**2000**, N = 820\",\n  stat_2 = \"**2001**, N = 820\",\n  stat_3 = \"**2002**, N = 820\"\n)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\nColumn Name   Column Header      \n------------  -------------------\nlabel         **Characteristic** \nstat_1        **2000**, N = 820  \nstat_2        **2001**, N = 820  \nstat_3        **2002**, N = 820  \n```\n:::\n:::\n\n\n\nとしてあげます。gtsummaryの詳しい使い方は本コースの対象範囲からはずれるので、ここでは上のようなパッケージや関数を使うと表が作れるんだというくらいの認識でよいと思います。\n\n今回は、この表を利用しましょう。\n\n尚、職場別に集計した結果は、このgtsummary::tbl_summaryに与えるデータをfilterを利用して職場単位に絞り込めばOKです。なので、\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% count(wpid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 x 2\n   wpid     n\n  <dbl> <int>\n1     1   300\n2     2   240\n3     3   600\n4     4   120\n5     5  1200\n```\n:::\n:::\n\n\n\nこのように、wpidが１から５まで、５つあるので、５回、処理を繰り返す必要があります。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% \n  filter(wpid==1) %>% \ntbl_summary(\n  data = .,\n  by=\"yr\",\n  include = c(\"bmi\",\"sbp\",\"dbp\"),\n  label = list(bmi ~ \"BMI\", \n               sbp ~ \"収縮期血圧\",\n               dbp ~ \"拡張期血圧\") \n) %>% \n  modify_header(list(label~\"**検査値**\")) %>%  \n  # 検査値を足しています\n  \n  modify_spanning_header( #この関数で「年度」を足しています\n    list(\n      stat_1 ~ \"**年度**\",\n      stat_2 ~ \"**年度**\",\n      stat_3 ~ \"**年度**\"\n    )\n  ) %>% \n  \n  modify_footnote( # この関数でフットノートを日本語にしています\n    list(\n      stat_1 ~ \"中央値(IQR)\",\n      stat_2 ~ \"中央値(IQR)\",\n      stat_3 ~ \"中央値(IQR)\"\n    )\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nTable printed with `knitr::kable()`, not {gt}. Learn why at\nhttps://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html\nTo suppress this message, include `message = FALSE` in code chunk header.\n```\n:::\n\n::: {.cell-output-display}\n|**検査値** |    **2000**, N = 100    |    **2001**, N = 100    |    **2002**, N = 100    |\n|:----------|:-----------------------:|:-----------------------:|:-----------------------:|\n|BMI        |  22.52 (21.36, 23.70)   |  22.84 (21.94, 23.87)   |  22.79 (21.68, 23.62)   |\n|収縮期血圧 | 124.61 (123.63, 125.46) | 124.66 (123.83, 125.69) | 124.74 (123.83, 125.54) |\n|拡張期血圧 |  66.76 (65.58, 67.56)   |  66.83 (65.79, 67.58)   |  66.86 (65.83, 67.65)   |\n:::\n:::\n\n\n\nさすがに面倒なので、関数化しておきましょう。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmake_hyou <- function(.data){\n  .data %>% \n    tbl_summary(\n      data = .,\n      by=\"yr\",\n      include = c(\"bmi\",\"sbp\",\"dbp\"),\n      label = list(bmi ~ \"BMI\", \n                   sbp ~ \"収縮期血圧\",\n                   dbp ~ \"拡張期血圧\") \n    ) %>% \n    modify_header(list(label~\"**検査値**\")) %>%  \n    # 検査値を足しています\n    \n    modify_spanning_header( #この関数で「年度」を足しています\n      list(\n        stat_1 ~ \"**年度**\",\n        stat_2 ~ \"**年度**\",\n        stat_3 ~ \"**年度**\"\n      )\n    ) %>% \n    \n    modify_footnote( # この関数でフットノートを日本語にしています\n      list(\n        stat_1 ~ \"中央値(IQR)\",\n        stat_2 ~ \"中央値(IQR)\",\n        stat_3 ~ \"中央値(IQR)\"\n      )\n    )\n}\n```\n:::\n\n\n.data を与えてあげて、表ができあがります。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% filter(wpid==2) %>% make_hyou()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nTable printed with `knitr::kable()`, not {gt}. Learn why at\nhttps://www.danieldsjoberg.com/gtsummary/articles/rmarkdown.html\nTo suppress this message, include `message = FALSE` in code chunk header.\n```\n:::\n\n::: {.cell-output-display}\n|**検査値** |   **2000**, N = 80   |   **2001**, N = 80   |   **2002**, N = 80   |\n|:----------|:--------------------:|:--------------------:|:--------------------:|\n|BMI        | 22.44 (21.32, 23.26) | 22.19 (21.12, 23.00) | 22.13 (21.17, 23.19) |\n|収縮期血圧 | 93.45 (92.22, 94.52) | 93.26 (92.26, 94.11) | 93.36 (92.37, 94.31) |\n|拡張期血圧 | 35.41 (34.44, 36.01) | 35.42 (34.32, 36.35) | 35.80 (34.19, 36.44) |\n:::\n:::\n\n\n\nこの関数を用いて、kadai/kadai1_1.Rmdでレポートが出力できるか見ていきましょう。",
    "supporting": [
      "s07-016_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}